---
title: "Formats description"
---

## Overview of the formats
Argo data format is an implementation of NetCDF format developed by UCAR/Unidata (https://doi.org/10.5065/D6H70CW6).
NetCDF (Network Common Data Form) is an interface for array-oriented data access and a library that provides an implementation of the interface. The NetCDF library also defines a machine-independent format for representing scientific data. Together, the interface, library, and format support the creation, access, and sharing of scientific data. The NetCDF software was developed at the Unidata Program Centre in Boulder, Colorado.

Argo formats are divided in 4 sections:

- Dimensions and definitions
- General information
- Data section
- History section

Argo data comply with NetCDF Climate and Forecast (CF) Metadata Conventions:

- https://cfconventions.org/ 

Argo data uses the UDUNITS convention when applicable to populate the variable attribute "unit" in the Data section.  The UDUNITS standard, database and supporting information is available from
- https://doi.org/10.5065/D6KD1WN0

Argo date and time: all date and time have to be given either in Universal Time (UTC) or in float’s time.

## Core-Argo profile format version 3.1
An Argo single-cycle profile file contains a set of profiles from a single cycle. The minimum number is one profile per cycle. There is no defined maximum number of profiles per cycle.
Core-Argo profile contains the CTD sensor parameters (pressure, temperature, salinity, conductivity) that are measured with the same vertical sampling scheme and at the same location and time. Additional parameters from other sensors are stored in a B-Argo profile file. The B-profile file is very similar to core-Argo profile file; its additional features are listed in §2.6
Some specialty floats collect additional profiles per cycle. These specialty profiles contain parameters measured at pressure levels that are different from the CTD levels, and can be at locations and time that are different from the primary profile. When multiple profiles exist in a single cycle, users are urged to check the information associated with each profile in order to determine their spatial and temporal relations. Some examples of speciality profiles with different vertical sampling schemes are:
Bouncing profiles: a series of shallow profiles performed during one cycle.
High resolution near-surface observations: higher resolution vertical sampling near the surface from unpumped CTD.
For single-cycle profile file naming conventions, see §4.1.

### Global attributes
The global attributes section is used for data discovery. The following global attributes should appear in the global section:

// global attributes:<br>
:title = "Argo float vertical profile";<br>
:institution = "CSIRO";<br>
:source = "Argo float";<br>
:history = "2011-04-22T06:00:00Z creation";<br>
:references = "http://www.argodatamgt.org/Documentation";<br>
:id = "https://doi.org/10.17882/42182";<br>
:comment = "free text";<br>
:user_manual_version = "3.4";<br>
:Conventions = "Argo-3.1 CF-1.6";<br>
:featureType = "trajectoryProfile";<br>


| Global attribute name | Definition                          |
|-----------------------|-------------------------------------|
| title                 | A succinct description of what is in the dataset. |
| institution           | Specifies where the original data was produced. |
| source                | The method of production of the original data. If it was model-generated, source should name the model and its version, as specifically as could be useful. If it is observational, source should characterize it (e.g., "surface observation" or "radiosonde"). |
| history               | Provides an audit trail for modifications to the original data. Well-behaved generic NetCDF filters will automatically append their name and the parameters with which they were invoked to the global history attribute of an input NetCDF file. We recommend that each line begin with a timestamp indicating the date and time of day that the program was executed. |
| references            | Published or web-based references that describe the data or methods used to produce it. |
| id                    | The Argo GDAC data DOI: https://doi.org/10.17882/42182 <br>This attribute is optional and recommended |
| comment               | Miscellaneous information about the data or methods used to produce it. |
| user_manual_version   | The version number of the user manual |
| Conventions           | The conventions supported by this file, blank separated |
| featureType           | The NetCDF CF feature type. |
| comment_on_resolution | Optional comment on parameter resolution |



### Dimensions
| **Name**  | **Value**       | **Definition** |
| --------- | --------------- | -------------- |
| DATE_TIME | DATE_TIME = 14; | This dimension is the length of an ASCII date and time value.<br>Date_time convention is : YYYYMMDDHHMISS<br>YYYY : year<br>MM : month<br>DD : day<br>HH : hour of the day (as 0 to 23)<br>MI : minutes (as 0 to 59)<br>SS : seconds (as 0 to 59)<br>Date and time values are always in universal time coordinates (UTC).<br>Examples : <br>20010105172834 : January 5<sup>th</sup> 2001 17:28:34<br>19971217000000 : December 17<sup>th</sup> 1997 00:00:00 |
| STRING256<br>STRING64<br>STRING32<br>STRING16<br>STRING8<br>STRING4<br>STRING2 | STRING256 = 256;<br>STRING64   =  64;<br>STRING32   =  32;<br>STRING16   =  16;<br>STRING8     =   8;<br>STRING4     =   4;<br>STRING2     =   2; | String dimensions from 2 to 256. |
| N_PROF | N_PROF = \<int value>; |Number of profiles contained in the file.<br>This dimension depends on the data set.<br>A file contains at least one profile.<br>There is no defined limit on the maximum number of profiles in a file.<br>Example : N_PROF = 100 |
| N_PARAM | N_PARAM = \<int value>; | Maximum number of parameters measured or calculated for a pressure sample.<br>This dimension depends on the data set.<br>Examples :<br>(pressure, temperature) : N_PARAM = 2<br>(pressure, temperature, salinity) : N_PARAM = 3<br>(pressure, temperature, conductivity, salinity) : N_PARAM = 4 <br>|
| N_LEVELS | N_LEVELS = \<int value>; | Maximum number of pressure levels contained in a profile.<br>This dimension depends on the data set.<br>Example : N_LEVELS = 100 |
| N_CALIB | N_CALIB = \<int value>; | Maximum number of calibrations performed on a profile.<br>This dimension depends on the data set.<br>Example : N_CALIB = 10 |
| N_HISTORY | N_HISTORY = UNLIMITED; | Number of history records. |


### General information on the profile file
This section contains information about the whole file.

| Name                | Definition  | Comment  |
| ------------------- | ------------ | ------------------- |
| DATA_TYPE     | char DATA_TYPE(STRING16);<br>DATA_TYPE:long_name = "Data type";<br>DATA_TYPE:conventions = "Argo reference table 1";<br>DATA_TYPE:_FillValue = " ";<br>| This field contains the type of data contained in the file.<br>The list of acceptable data types is in the reference table 1 ([https://vocab.nerc.ac.uk/collection/R01/](https://vocab.nerc.ac.uk/collection/R01/)).<br>Example : Argo profile |
| FORMAT_VERSION | char FORMAT_VERSION(STRING4);<br>FORMAT_VERSION:long_name = "File format version";<br>FORMAT_VERSION:_FillValue = " "; | File format version<br>Example : “3.1” |
| HANDBOOK_VERSION    | char HANDBOOK_VERSION(STRING4);<br>HANDBOOK_VERSION:long_name = "Data handbook version";br>HANDBOOK_VERSION:_FillValue = " ";<br> | Version number of the data handbook.<br>This field indicates that the data contained in this file are managed according to the policy described in the Argo data management handbook.<br>Example : “1.0”  |
| REFERENCE_DATE_TIME | char REFERENCE_DATE_TIME(DATE_TIME);<br>REFERENCE_DATE_TIME:long_name = "Date of reference for Julian days";<br>REFERENCE_DATE_TIME:conventions = "YYYYMMDDHHMISS";<br>REFERENCE_DATE_TIME:_FillValue = " "; | Date of reference for Julian days.<br>The recommended reference date time is “19500101000000” : January 1st 1950 00:00:00 |
| DATE_CREATION       | char DATE_CREATION(DATE_TIME);<br>DATE_CREATION:long_name = "Date of file creation";<br>DATE_CREATION:conventions = "YYYYMMDDHHMISS";<br>DATE_CREATION:_FillValue = " "; | Date and time (UTC) of creation of this file.<br>Format : YYYYMMDDHHMISS<br>Example:<br>20011229161700 : December 29th 2001 16 :17 :00  |
| DATE_UPDATE         | char DATE_UPDATE(DATE_TIME);<br>DATE_UPDATE:long_name = "Date of update of this file";<br>DATE_UPDATE:conventions = "YYYYMMDDHHMISS";<br>DATE_UPDATE:_FillValue = " "; | Date and time (UTC) of update of this file.<br>Format : YYYYMMDDHHMISS<br>Example :<br>20011230090500 : December 30th 2001 09 :05 :00 |


### General information for each profile
This section contains general information on each profile.<br>
Each item of this section has a N_PROF (number of profiles) dimension.

| **Name** | **Definition** | **Comment** |
|----------|----------------|-------------|
| PLATFORM\_NUMBER | char PLATFORM\_NUMBER(N\_PROF, STRING8);<br>PLATFORM\_NUMBER:long\_name = "Float unique identifier";<br>PLATFORM\_NUMBER:conventions = "WMO float identifier : A9IIIII";<br>PLATFORM\_NUMBER:\_FillValue = " ";<br> | WMO float identifier.WMO is the World Meteorological Organization.This platform number is unique.Example : 6900045 |
| PROJECT\_NAME | char PROJECT\_NAME(N\_PROF, STRING64);<br>PROJECT\_NAME:long\_name = "Name of the project";<br>PROJECT\_NAME:\_FillValue = " ";<br> | Name of the project which operates the profiling float that performed the profile.Example : “GYROSCOPE” (EU project for ARGO program) |
| PI\_NAME | char PI\_NAME (N\_PROF, STRING64);<br>PI\_NAME:long\_name = "Name of the principal investigator";<br>PI\_NAME:\_FillValue = " ";<br> | Name of the principal investigator responsible for the profiling float. Example: “Julia UITZ”.Valid PI names are listed in reference table R40 ( [https://vocab.nerc.ac.uk/collection/R40/](https://vocab.nerc.ac.uk/collectionsearch_nvs/R40/)). Multiple names can be concatenated, separated by commas. |
| STATION\_PARAMETERS | char STATION\_PARAMETERS(N\_PROF, N\_PARAM, STRING16);<br>STATION\_PARAMETERS:long\_name = "List of available parameters for the station";<br>STATION\_PARAMETERS:conventions = "Argo reference table 3";<br>STATION\_PARAMETERS:\_FillValue = " ";<br> | List of parameters contained in this profile.The parameter names are listed in reference table 3 (https\://vocab.nerc.ac.uk/collection/R03/).Examples : TEMP, PSAL, CNDCTEMP : temperaturePSAL : practical salinityCNDC : conductivity |
| CYCLE\_NUMBER | int CYCLE\_NUMBER(N\_PROF);<br>CYCLE\_NUMBER:long\_name = "Float cycle number";<br>CYCLE\_NUMBER:conventions = "0...N, 0 : launch cycle (if exists), 1 : first complete cycle";<br>CYCLE\_NUMBER:\_FillValue = 99999;<br> | Float cycle number.See §1.6: float cycle definition. |
| DIRECTION | char DIRECTION(N\_PROF);<br>DIRECTION:long\_name = "Direction of the station profiles";<br>DIRECTION:conventions = "A: ascending profiles, D: descending profiles";<br>DIRECTION:\_FillValue = " ";<br> | Type of profile on which measurement occurs.A : ascending profileD : descending profile |
| DATA\_CENTRE | char DATA\_CENTRE(N\_PROF, STRING2);<br>DATA\_CENTRE:long\_name = "Data centre in charge of float data processing";<br>DATA\_CENTRE:conventions = "Argo reference table 4";<br>DATA\_CENTRE:\_FillValue = " ";<br> | Code for the data centre in charge of the float data management.The data centre codes are described in the reference table 4 (https\://vocab.nerc.ac.uk/collection/R04/).Example : “ME" for MEDS |
| DC\_REFERENCE | char DC\_REFERENCE(N\_PROF, STRING32);<br>DC\_REFERENCE:long\_name = "Station unique identifier in data centre";<br>DC\_REFERENCE:conventions = "Data centre convention";<br>DC\_REFERENCE:\_FillValue = " ";<br> | Unique identifier of the profile in the data centre.Data centres may have different identifier schemes.DC\_REFERENCE is therefore not unique across data centres. |
| DATA\_STATE\_INDICATOR | char DATA\_STATE\_INDICATOR(N\_PROF, STRING4);<br>DATA\_STATE\_INDICATOR:long\_name = "Degree of processing the data have passed through";<br>DATA\_STATE\_INDICATOR:conventions = "Argo reference table 6";<br>DATA\_STATE\_INDICATOR:\_FillValue = " ";<br> | Degree of processing the data has passed through.The data state indicator is described in the reference table 6 (https\://vocab.nerc.ac.uk/collection/R06/). |
| DATA\_MODE | char DATA\_MODE(N\_PROF);<br>DATA\_MODE:long\_name = "Delayed mode or real time data";<br>DATA\_MODE:conventions = "R : real time;<br> D : delayed mode;<br> A : real time with adjustment";<br>DATA\_MODE:\_FillValue = " ";<br> | Indicates if the profile contains real time, delayed mode or adjusted data.R : real time dataD : delayed mode dataA : real time data with adjusted values |
| PLATFORM\_TYPE | char PLATFORM\_TYPE(N\_PROF, STRING32);<br>PLATFORM\_TYPE:long\_name = "Type of float";<br>PLATFORM\_TYPE:conventions = "Argo reference table 23";<br>PLATFORM\_TYPE:\_FillValue = " ";<br>  | Type of float listed in reference table 23 (https\://vocab.nerc.ac.uk/collection/R23/).Example: SOLO, APEX, PROVOR, ARVOR, NINJA |
| FLOAT\_SERIAL\_NO | char FLOAT\_SERIAL\_NO(N\_PROF, STRING32);<br>FLOAT\_SERIAL\_NO:long\_name = "Serial number of the float";<br>FLOAT\_SERIAL\_NO:\_FillValue = " ";<br> | Serial number of the float.Example 1679 |
| FIRMWARE\_VERSION | char FIRMWARE\_VERSION(N\_PROF, STRING64);<br>FIRMWARE\_VERSION:long\_name = "Instrument firmware version";<br>FIRMWARE\_VERSION:\_FillValue = " ";<br> | Firmware version of the float.Example : "013108"The dimension STRING32 instead of STRING64 remains accepted. |
| WMO\_INST\_TYPE | char WMO\_INST\_TYPE(N\_PROF, STRING4);<br>WMO\_INST\_TYPE:long\_name = "Coded instrument type”;<br>WMO\_INST\_TYPE:conventions = "Argo reference table 8";<br>WMO\_INST\_TYPE:\_FillValue = " ";<br> | Instrument type from WMO code table 1770.A subset of WMO table 1770 is documented in the reference table 8 (https\://vocab.nerc.ac.uk/collection/R08/).Example : 846 : Webb Research float, Seabird sensor |
| JULD | double JULD(N\_PROF);<br>JULD:long\_name = "Julian day (UTC) of the station relative to REFERENCE\_DATE\_TIME";<br>JULD:standard\_name = "time";<br>JULD:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD:resolution = X;<br>JULD:\_FillValue = 999999.;<br>JULD:axis = "T";<br> | Julian day of the profile.The integer part represents the day, the decimal part represents the time of the profile.Date and time are in Universal Time.The Julian day is relative to REFERENCE\_DATE\_TIME.Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_QC | char JULD\_QC(N\_PROF);<br>JULD\_QC:long\_name = "Quality on date and time";<br>JULD\_QC:conventions = "Argo reference table 2";<br>JULD\_QC:\_FillValue = " ";<br> | Quality flag on JULD date and time.The flag scale is described in the reference tables 2 (https\://vocab.nerc.ac.uk/collection/RR2/ for real time and https\://vocab.nerc.ac.uk/collection/RD2/ for delayed mode).Example :1: the date and time seems correct. |
| JULD\_LOCATION | double JULD\_LOCATION(N\_PROF);<br>JULD\_LOCATION:long\_name = "Julian day (UTC) of the location relative to REFERENCE\_DATE\_TIME";<br>JULD\_LOCATION:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_LOCATION:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_LOCATION:resolution = X;<br>JULD\_LOCATION:\_FillValue = 999999.;<br> | Julian day of the location of the profile.The integer part represents the day, the decimal part represents the time of the profile.Date and time are in Universal Time.The Julian day is relative to REFERENCE\_DATE\_TIME.Example :18833.8013889885 : July 25 2001 19:14:00 |
| LATITUDE | double LATITUDE(N\_PROF);<br>LATITUDE:long\_name = "Latitude of the station, best estimate";<br>LATITUDE:standard\_name = "latitude";<br>LATITUDE:units = "degree\_north";<br>LATITUDE:\_FillValue = 99999.;<br>LATITUDE:valid\_min = -90.;<br>LATITUDE:valid\_max = 90.;<br>LATITUDE:axis = "Y";<br> | Latitude of the profile.Unit : degree northThis field contains the best estimated latitude.The latitude value may be improved in delayed mode.The measured locations of the float are located in the trajectory file.Example : 44.4991 : 44° 29’ 56.76’’ N |
| LONGITUDE | double LONGITUDE(N\_PROF);<br>LONGITUDE:long\_name = "Longitude of the station, best estimate";<br>LONGITUDE:standard\_name = "longitude";<br>LONGITUDE:units = "degree\_east";<br>LONGITUDE:\_FillValue = 99999.;<br>LONGITUDE:valid\_min = -180.;<br>LONGITUDE:valid\_max = 180.;<br>LONGITUDE:axis = "X";<br> | Longitude of the profile.Unit : degree eastThis field contains the best estimated longitude.The longitude value may be improved in delayed mode.The measured locations of the float are located in the trajectory file.Example : 16.7222 : 16° 43’ 19.92’’ E |
| POSITION\_QC | char POSITION\_QC(N\_PROF);<br>POSITION\_QC:long\_name = "Quality on position (latitude and longitude)";<br>POSITION\_QC:conventions = "Argo reference table 2";<br>POSITION\_QC:\_FillValue = " ";<br> | Quality flag on position.The flag on position is set according to (LATITUDE, LONGITUDE) quality.The flag scale is described in the reference tables 2 (<https://vocab.nerc.ac.uk/collection/RR2/> for real time and <https://vocab.nerc.ac.uk/collection/RD2/> for delayed mode).Example: 1: position seems correct. |
| POSITIONING\_SYSTEM | char POSITIONING\_SYSTEM(N\_PROF, STRING8);<br>POSITIONING\_SYSTEM:long\_name = "Positioning system";<br>POSITIONING\_SYSTEM:\_FillValue = " ";<br> | Name of the system in charge of positioning the float locations from reference table 9 (<https://vocab.nerc.ac.uk/collection/R09/>).Examples : ARGOS |
| POSITION\_ERROR\_REPORTED | float POSITION\_ERROR\_REPORTED(N\_PROF);<br>POSITION\_ERROR\_REPORTED:long\_name = "Position error reported by the positioning system";<br>POSITION\_ERROR\_REPORTED:units = "meters";<br>POSITION\_ERROR\_REPORTED:\_FillValue = 99999.;<br> | **This is an optional variable.**Position error reported by the positioning system. |
| POSITION\_ERROR\_ESTIMATED | float POSITION\_ERROR\_ESTIMATED(N\_PROF);<br>POSITION\_ERROR\_ESTIMATED:long\_name = "Position error estimated by the real-time or delayed-mode process";<br>POSITION\_ERROR\_ESTIMATED:units = "meters";<br>POSITION\_ERROR\_ESTIMATED:\_FillValue = 99999.;<br> | **This is an optional variable.** Position error estimated  by the real-time or delayed-mode process. |
| POSITION\_ERROR\_ESTIMATED\_COMMENT | char POSITION\_ERROR\_ESTIMATED\_COMMENT(N\_PROF, STRING1024);<br>POSITION\_ERROR\_ESTIMATED\_COMMENT:long\_name = "Comment on the method used to determine POSITION\_ERROR\_ESTIMATED";<br>POSITION\_ERROR\_ESTIMATED\_COMMENT:\_FillValue = " ";<br> | **This is an optional variable.**Comment on the method used to determine POSITION\_ERROR\_ESTIMATED. |
| PROFILE\_\<PARAM>\_QC | char PROFILE\_\<PARAM>\_QC(N\_PROF);<br>PROFILE\_\<PARAM>\_QC:long\_name = "Global quality flag of \<PARAM> profile";<br>PROFILE\_\<PARAM>\_QC:conventions = "Argo reference table 2a";<br>PROFILE\_\<PARAM>\_QC:\_FillValue = " ";<br> | Global quality flag on the PARAM profile.PARAM is among the STATION\_PARAMETERS.The overall flag is set to indicate the percentage of good data in the profile as described in reference table 2a (<https://vocab.nerc.ac.uk/collection/RP2/>).Example :PROFILE\_TEMP\_QC = A : the temperature profile contains only good valuesPROFILE\_PSAL\_QC = C : the salinity profile contains 50% to 75% good values |
| VERTICAL\_SAMPLING\_SCHEME | char VERTICAL\_SAMPLING\_SCHEME(N\_PROF, STRING256);<br>VERTICAL\_SAMPLING\_SCHEME:long\_name = "Vertical sampling scheme";<br>VERTICAL\_SAMPLING\_SCHEME:conventions = "Argo reference table 16";<br>VERTICAL\_SAMPLING\_SCHEME:\_FillValue = " ";<br> | Use the vertical sampling scheme to differentiate and identify profiles from a single-cycle with different vertical sampling schemes.See reference table 16 (<https://vocab.nerc.ac.uk/collection/R16/>). |
| CONFIG\_MISSION\_NUMBER | int CONFIG\_MISSION\_NUMBER(N\_PROF);<br>CONFIG\_MISSION\_NUMBER:long\_name = " Unique number denoting the missions performed by the float";<br>CONFIG\_MISSION\_NUMBER:conventions = "1...N, 1 : first complete mission";<br>CONFIG\_MISSION\_NUMBER:\_FillValue = 99999;<br> | Unique number of the mission to which this profile belongs.See note on floats with multiple configurations §2.4.6.1.The number 0 (zero) can be used to denote the float’s mission prelude, if it exists. |


#### Note: how to sort STATION_PARAMETERS variable
The parameters listed in STATION_PARAMETERS should be sorted in the same order within a given float’s data file.
 	 	 	 	
Examples with POSITION_QC is 8 (estimated value)
- Case 1: only one system has been used for the interpolation. That system is shown in POSITIONING_SYSTEM.
- Case 2: When no position was transmitted and an  estimate of the position in delayed mode relies on information not from a positioning system (a numerical method, model data. etc.) the POSITIONG_SYSTEM  should be “NONE”

###  Measurements for each profile
This section contains information on each level of each profile.
Each variable in this section has a N_PROF (number of profiles), N_LEVELS (number of pressure levels) dimension.
<PARAM> contains the raw values transmitted by the float.
The values in <PARAM> should never be altered. <PARAM>_QC contains QC flags that pertain to the values in <PARAM>. Values in <PARAM>_QC are set initially in 'R' and 'A' modes by the automatic real-time tests.
They are later modified in 'D' mode at levels where the QC flags are set incorrectly by the real-time procedures, and where erroneous data are not detected by the real-time procedures.
Each parameter can be adjusted (in delayed-mode, but also in real-time if appropriate). In that case, <PARAM>_ADJUSTED contains the adjusted values, <PARAM>_ADJUSTED_QC contains the QC flags set by the adjustment process, and <PARAM>_ADJUSTED_ERROR contains the adjustment uncertainties.
When a profile has DATA_MODE = ’R’, no adjusted data are available. Hence the adjusted section (<PARAM>_ADJUSTED, <PARAM>_ADJUSTED_QC and <PARAM>_ADJUSTED_ERROR) should be filled with FillValue.

When N_PROF > 1, DATA_MODE for each profile can be assigned differently. This is because when there are multiple profiles, delayed-mode or near real-time adjustments can become available at different times.

The adjusted section for each N_PROF should then be filled independently according to its DATA_MODE.

For example, in a profile file with 2 profiles, it is possible that
- DATA_MODE = ’D’ in N_PROF = 1, and
- DATA_MODE = ’R’ in N_PROF = 2.

In this case:
- the adjusted section in N_PROF=1 with DATA_MODE=’D’ should be filled with their adjusted values;
- the adjusted section in N_PROF=2 with DATA_MODE=’R’ should be filled with FillValue.
The delayed mode QC for core Argo profiles is described in "Argo quality control manual" by Annie Wong et al. (see http://www.argodatamgt.org/Documentation).

|  **Name** | **Definition** | **Comment** |
|-----------|----------------|-------------|
| \<PARAM> | float \<PARAM>(N\_PROF, N\_LEVELS);<br>\<PARAM>:long\_name = "\<X>";<br>\<PARAM>:standard\_name = "\<X>";<br>\<PARAM>:\_FillValue = \<X>;<br>\<PARAM>:units = "\<X>";<br>\<PARAM>:valid\_min = \<X>;<br>\<PARAM>:valid\_max = \<X>;<br>\<PARAM>:C\_format = "\<X>";<br>\<PARAM>:FORTRAN\_format = "\<X>";<br>\<PARAM>:resolution = \<X>;<br> | \<PARAM> contains the original values of a parameter listed in  reference table 3 (<https://vocab.nerc.ac.uk/collection/R03/>).\<X> : this field is specified in the reference table 3 (<https://vocab.nerc.ac.uk/collection/R03/>). |
| \<PARAM>\_QC | char \<PARAM>\_QC(N\_PROF, N\_LEVELS);<br>\<PARAM>\_QC:long\_name = "quality flag";<br>\<PARAM>\_QC:conventions = "Argo reference table 2";<br>\<PARAM>\_QC:\_FillValue = " ";<br> | Quality flag applied on each \<PARAM> value.The flag scale is specified in reference tables 2 (<https://vocab.nerc.ac.uk/collection/RR2/> for real time and <https://vocab.nerc.ac.uk/collection/RD2/> for delayed mode).                                                                                                              |
| \<PARAM>\_ADJUSTED        | float \<PARAM>\_ADJUSTED(N\_PROF, N\_LEVELS);<br>\<PARAM>\_ADJUSTED:long\_name = "\<X>";<br>\<PARAM>\_ADJUSTED:standard\_name = "\<X>";<br>\<PARAM>\_ADJUSTED:\_FillValue = \<X>;<br>\<PARAM>\_ADJUSTED:units = "\<X>";<br>\<PARAM>\_ADJUSTED:valid\_min = \<X>;<br>\<PARAM>\_ADJUSTED:valid\_max = \<X>;<br>\<PARAM>\_ADJUSTED:C\_format = "\<X>";<br>\<PARAM>\_ADJUSTED:FORTRAN\_format = "\<X>";<br>\<PARAM>\_ADJUSTED:resolution= \<X>;<br> | \<PARAM>\_ADJUSTED contains the adjusted values derived from the original values of the parameter.\<X> : this field is specified in the reference table 3 (<https://vocab.nerc.ac.uk/collection/R03/>).**\<PARAM>\_ADJUSTED is mandatory.** When no adjustment is performed, the FillValue is inserted. |
| \<PARAM>\_ADJUSTED\_QC    | char \<PARAM>\_ADJUSTED\_QC(N\_PROF, N\_LEVELS);<br>\<PARAM>\_ADJUSTED\_QC:long\_name = "quality flag";<br>\<PARAM>\_ADJUSTED\_QC:conventions = "Argo reference table 2";<br>\<PARAM>\_ADJUSTED\_QC:\_FillValue = " ";<br> | Quality flag applied on each \<PARAM>\_ADJUSTED value.The flag scale is specified in reference tables 2 (<https://vocab.nerc.ac.uk/collection/RR2/> for real time and <https://vocab.nerc.ac.uk/collection/RD2/> for delayed mode).**\<PARAM>\_ADJUSTED\_QC is mandatory.**When no adjustment is performed, the FillValue is inserted. |
| \<PARAM>\_ADJUSTED\_ERROR | float \<PARAM>\_ADJUSTED\_ERROR(N\_PROF, N\_LEVELS);<br>\<PARAM>\_ADJUSTED\_ERROR:long\_name = "Contains the error on the adjusted values as determined by the delayed mode QC process";<br>\<PARAM>\_ADJUSTED\_ERROR:\_FillValue = \<X>;<br>\<PARAM>\_ADJUSTED\_ERROR:units = "\<X>";<br>\<PARAM>\_ADJUSTED\_ERROR:C\_format = "\<X>";<br>\<PARAM>\_ADJUSTED\_ERROR:FORTRAN\_format = "\<X>";<br>\<PARAM>\_ADJUSTED\_ERROR:resolution= \<X>;<br> | \<PARAM>\_ADJUSTED\_ERROR Contains the error on the adjusted values as determined by the delayed mode QC process.\<X> : this field is specified in the reference table 3 (<https://vocab.nerc.ac.uk/collection/R03/>).**\<PARAM>\_ADJUSTED\_ERROR is mandatory.**When no adjustment is performed, the FillValue is inserted. |

#### Note on vertical axis associated to PRES
The variable PRES (pressure) is the vertical axis. The PRES declaration contains the variable attribute 
PRES:axis = "Z";

| **Parameter definition: TEMP, TEMP\_ADJUSTED**|
|-----------------------------------------------|
| float TEMP(N\_PROF, N\_LEVELS);<br>TEMP:long\_name = "sea temperature in-situ ITS-90 scale";<br>TEMP:standard\_name = "sea\_water\_temperature";<br>TEMP:\_FillValue = 99999.f;<br>TEMP:units = "degree\_Celsius";<br>TEMP:valid\_min = -2.f;<br>TEMP:valid\_max = 40.f;<br>TEMP:C\_format = "%9.3f";<br>TEMP:FORTRAN\_format = "F9.3";<br>TEMP:resolution = 0.001f;<br>char TEMP\_QC(N\_PROF, N\_LEVELS);<br>TEMP\_QC:long\_name = "quality flag";<br>TEMP\_QC:conventions = "Argo reference table 2";<br>TEMP\_QC:\_FillValue = " ";<br>float TEMP\_ADJUSTED(N\_PROF, N\_LEVELS);<br>TEMP\_ADJUSTED:long\_name = "adjusted sea temperature in-situ ITS-90 scale";<br>TEMP:standard\_name = "sea\_water\_temperature";<br>TEMP\_ADJUSTED:\_FillValue = 99999.f;<br>TEMP\_ADJUSTED:units = "degree\_Celsius";<br>TEMP\_ADJUSTED:valid\_min = -2.f;<br>TEMP\_ADJUSTED:valid\_max = 40.f;<br>TEMP\_ADJUSTED:C\_format = "%9.3f";<br>TEMP\_ADJUSTED:FORTRAN\_format= "F9.3";<br>TEMP\_ADJUSTED:resolution= 0.001f;<br>char TEMP\_ADJUSTED\_QC(N\_PROF, N\_LEVELS);<br>TEMP\_ADJUSTED QC:long\_name = "quality flag";<br>TEMP\_ADJUSTED QC:conventions = "Argo reference table 2";<br>TEMP\_ADJUSTED\_QC:\_FillValue = " ";<br>float TEMP\_ADJUSTED\_ERROR(N\_PROF, N\_LEVELS);<br>TEMP\_ADJUSTED\_ERROR:long\_name = "error on sea temperature in-situ ITS-90 scale ";<br>TEMP\_ADJUSTED\_ERROR:\_FillValue = 99999.f;<br>TEMP\_ADJUSTED\_ERROR:units = "degree\_Celsius";<br>TEMP\_ADJUSTED\_ERROR :C\_format = "%9.3f";<br>TEMP\_ADJUSTED\_ERROR :FORTRAN\_format= "F9.3";<br>TEMP\_ADJUSTED\_ERROR:resolution= 0.001f; |


#### How to report unusual parameter resolutions in a profile
The resolution of a parameter is reported in “resolution” attribute.
For specific floats, the resolution of a parameter may depend on the profile level.
How to keep the information in the file?
add a "comment_on_resolution" attribute on the variable to inform the user


### Calibration information for each profile
Calibrations are applied to parameters to create adjusted parameters. Different calibration methods will be used by groups processing Argo data. When a method is applied, its description is stored in the following fields.
This section contains calibration information for each parameter of each profile. 
Each item of this section has a N_PROF (number of profiles), N_CALIB (number of calibrations), N_PARAM (number of parameters) dimension.
If no calibration is available, N_CALIB is set to 1, PARAMETER is filled with the list of parameter names, and all values of the calibration section are set to fill values. 

| **Name** | **Definition** | **Comment** |
| PARAMETER | char PARAMETER(N\_PROF, N\_CALIB, N\_PARAM, STRING16);<br>PARAMETER:long\_name = "List of parameters with calibration information";<br>PARAMETER:conventions = "Argo reference table 3";<br>PARAMETER:\_FillValue = " ";<br> | Name of the calibrated parameter. The list of parameters is  in reference table 3 (<https://vocab.nerc.ac.uk/collection/R03/>).Example : PSAL |
| SCIENTIFIC\_CALIB\_EQUATION    | char SCIENTIFIC\_CALIB\_EQUATION(N\_PROF, N\_CALIB, N\_PARAM, STRING256);<br>SCIENTIFIC\_CALIB\_EQUATION:long\_name = "Calibration equation for this parameter";<br>SCIENTIFIC\_CALIB\_EQUATION:\_FillValue = " ";<br> | Calibration equation applied to the parameter. Example :Tc = a1 \* T + a0 |
| SCIENTIFIC\_CALIB\_COEFFICIENT | char SCIENTIFIC\_CALIB\_COEFFICIENT(N\_PROF, N\_CALIB, N\_PARAM, STRING256);<br>SCIENTIFIC\_CALIB\_COEFFICIENT:long\_name = "Calibration coefficients for this equation";<br>SCIENTIFIC\_CALIB\_COEFFICIENT:\_FillValue = " ";<br> | Calibration coefficients for this equation.Example :a1=0.99997 , a0=0.0021 |
| SCIENTIFIC\_CALIB\_COMMENT | char SCIENTIFIC\_CALIB\_COMMENT(N\_PROF, N\_CALIB, N\_PARAM, STRING256);<br>SCIENTIFIC\_CALIB\_COMMENT:long\_name = "Comment applying to this parameter calibration";<br>SCIENTIFIC\_CALIB\_COMMENT:\_FillValue = " ";<br> | Comment about this calibrationExample :The sensor is not stable |
| SCIENTIFIC\_CALIB\_DATE | char SCIENTIFIC\_CALIB\_DATE (N\_PROF N\_CALIB, N\_PARAM, DATE\_TIME)SCIENTIFIC\_CALIB\_DATE:long\_name = "Date of calibration";<br>SCIENTIFIC\_CALIB\_DATE:conventions = "YYYYMMDDHHMISS";<br>SCIENTIFIC\_CALIB\_DATE:\_FillValue = " ";<br> | Date of the calibration.Example : 20011217161700 |


### History information for each profile
This section contains history information for each action performed on each profile by a data centre. 

Each item of this section has a N\_HISTORY (number of history records), N\_PROF (number of profiles) dimension.

A history record is created whenever an action is performed on a profile.

The recorded actions are coded and described in the history code table from the reference table 7 (<https://vocab.nerc.ac.uk/collection/R07/>).

On the GDAC,the history section of the multi-cycle files is empty to reduce the size of the file. The history section is available in the single-cycle files

| **Name** | **Definition** | **Comment** |
|----------|----------------|-------------|
| HISTORY\_INSTITUTION       | char HISTORY\_INSTITUTION(N\_HISTORY, N\_PROF, STRING4);<br>HISTORY\_INSTITUTION:long\_name = "Institution which performed action”;<br>HISTORY\_INSTITUTION:conventions = "Argo reference table 4";<br>HISTORY\_INSTITUTION:\_FillValue = " ";<br> | Institution that performed the action.Institution codes are described in reference table 4 (<https://vocab.nerc.ac.uk/collection/R04/>).Example : ME for MEDS |
| HISTORY\_STEP | char HISTORY\_STEP(N\_HISTORY, N\_PROF, STRING4);<br>HISTORY\_STEP:long\_name = "Step in data processing";<br>HISTORY\_STEP:conventions = "Argo reference table 12";<br>HISTORY\_STEP:\_FillValue = " ";<br>| Code of the step in data processing for this history record. The step codes are described in reference table 12 (<https://vocab.nerc.ac.uk/collection/R12/>).Example : ARGQ : Automatic QC of data reported in real-time has been performed|
| HISTORY\_SOFTWARE| char HISTORY\_SOFTWARE (N\_HISTORY, N\_PROF, STRING4);<br>HISTORY\_SOFTWARE:long\_name = "Name of software which performed action";<br>HISTORY\_SOFTWARE:conventions = "Institution dependent";<br>HISTORY\_SOFTWARE:\_FillValue = " ";<br>| Name of the software that performed the action.This code is institution dependent.Example : WJO|
| HISTORY\_SOFTWARE\_RELEASE | char HISTORY\_SOFTWARE\_RELEASE(N\_HISTORY, N\_PROF, STRING4);<br>HISTORY\_SOFTWARE\_RELEASE:long\_name = "Version/release of software which performed action";<br>HISTORY\_SOFTWARE\_RELEASE:conventions = "Institution dependent";<br>HISTORY\_SOFTWARE\_RELEASE:\_FillValue = " ";<br> | Version of the software.This name is institution dependent.Example : «1.0» |
| HISTORY\_REFERENCE | char HISTORY\_REFERENCE (N\_HISTORY, N\_PROF, STRING64);<br>HISTORY\_REFERENCE:long\_name = "Reference of database";<br>HISTORY\_REFERENCE:conventions = "Institution dependent";<br>HISTORY\_REFERENCE:\_FillValue = " ";<br> | Code of the reference database used for quality control in conjunction with the software.This code is institution dependent.Example : WOD2001 |
| HISTORY\_DATE | char HISTORY\_DATE(N\_HISTORY, N\_PROF, DATE\_TIME);<br>HISTORY\_DATE:long\_name = "Date the history record was created";<br>HISTORY\_DATE:conventions = "YYYYMMDDHHMISS";<br>HISTORY\_DATE:\_FillValue = " ";<br> | Date of the action.Example : 20011217160057 |
| HISTORY\_ACTION | char HISTORY\_ACTION(N\_HISTORY, N\_PROF, STRING4);<br>HISTORY\_ACTION:long\_name = "Action performed on data";<br>HISTORY\_ACTION:conventions = "Argo reference table 7";<br>HISTORY\_ACTION:\_FillValue = " ";<br> | Name of the action.The action codes are described in reference table 7 (<https://vocab.nerc.ac.uk/collection/R07/>).Example : QCF$ for QC failed |
| HISTORY\_PARAMETER | char HISTORY\_PARAMETER(N\_HISTORY, N\_PROF, STRING16);<br>HISTORY\_PARAMETER:long\_name = "Station parameter action is performed on";<br>HISTORY\_PARAMETER:conventions = "Argo reference table 3";<br>HISTORY\_PARAMETER:\_FillValue = " ";<br> | Name of the parameter on which the action is performed.The parameters are described in reference table 3 (<https://vocab.nerc.ac.uk/collection/R03/>).Example : PSAL |
| HISTORY\_START\_PRES | float HISTORY\_START\_PRES(N\_HISTORY, N\_PROF);<br>HISTORY\_START\_PRES:long\_name = "Start pressure action applied on";<br>HISTORY\_START\_PRES:\_FillValue = 99999.f;<br>HISTORY\_START\_PRES:units = "decibar";<br> | Start pressure the action is applied to.Example : 1500.0 |
| HISTORY\_STOP\_PRES | float HISTORY\_STOP\_PRES(N\_HISTORY, N\_PROF);<br>HISTORY\_STOP\_PRES:long\_name = "Stop pressure action applied on";<br>HISTORY\_STOP\_PRES:\_FillValue = 99999.f;<br>HISTORY\_STOP\_PRES:units = "decibar";<br> | Stop pressure the action is applied to.**This should be greater than or equal to  START\_PRES.**Example : 1757.0 |
| HISTORY\_PREVIOUS\_VALUE | float HISTORY\_PREVIOUS\_VALUE(N\_HISTORY, N\_PROF);<br>HISTORY\_PREVIOUS\_VALUE:long\_name = "Parameter/Flag previous value before action";<br>HISTORY\_PREVIOUS\_VALUE:\_FillValue = 99999.f;<br> | Parameter or flag of the previous value before action.Example : 2 (probably good) for a flag that was changed to 1 (good) |
| HISTORY\_QCTEST | char HISTORY\_QCTEST(N\_HISTORY, N\_PROF, STRING16);<br>HISTORY\_QCTEST:long\_name = "Documentation of tests performed, tests failed (in hex form)";<br>HISTORY\_QCTEST:conventions = "Write tests performed when ACTION=QCP$;<br> tests failed when ACTION=QCF$";<br>HISTORY\_QCTEST:\_FillValue = " ";<br> | This field records the tests performed when ACTION is set to QCP$ (QC performed), the test failed when ACTION is set to QCF$ (QC failed).The QCTEST codes are described in reference table 11 (<https://vocab.nerc.ac.uk/collection/R11/>).Example : 0A (in hexadecimal form) |


The usage of the History section is described in §5 "Using the History section of the Argo netCDF Structure".


## Argo trajectory format version 3.2

Argo trajectory files contain all received Argos and GPS locations of Argo floats. The trajectory file also contains cycle timing information important for making velocity calculations. These times may come directly from the float in real time, from calculations based on float information in real time, from the satellite system in real time, or from estimations done in delayed mode.

In addition to locations and cycle timing information, a trajectory file often contains measurements such as pressure, temperature, salinity or conductivity performed at various intermediate times during the cycle. The full pressure, temperature and salinity profile collected upon ascent is not included in the trajectory file. This is stored in the profile file.

An Argo trajectory file contains the CTD and BGC sensor parameters that are measured outside the vertical profiles.

There may be two Argo trajectory files at one time for a float - a real time trajectory file ("R") and a delayed mode trajectory file ("D"). For naming conventions, see §4.1.3. The real time trajectory file will contain all the data obtained in real time for all the cycles the float has performed. The "R" file will exist until the float dies and DMQC is finalized. A delayed mode trajectory file exists for the entire float lifetime. 

The delayed mode trajectory file will contain both real time and delayed mode data. The delayed mode data will be the highest quality data available for each cycle that has been delayed mode quality controlled. However, delayed mode quality control may not be performed on all the float's cycles. In this case, the "D" file will contain both the real time and delayed mode data only for the cycles for which delayed mode quality control has been performed. Therefore, if both an "R" and "D" trajectory file exist, to obtain the best quality data for the entire float record, it might be necessary to look at the "D" file for the cycles that have been delayed mode quality controlled and then in the "R" file for the rest of the cycles which have not yet been delayed mode quality controlled. Once a float dies and the entire float record has been quality controlled, the "D" file will be the only file available on the GDAC and will contain both adjusted and not adjusted data. 

The trajectory file contains two groups of data variables. In this document the groups are differentiated by their dimension. 

The variable group described in §2.3.5 which includes the locations, cycle timing information, and measurements from the float is N\_MEASUREMENT long. It includes all the data from the float. If filled, the best timing information is kept in the JULD\_ADJUSTED variable. If this is filled in real time, that means either clock drift has been determined and adjustment has been applied (inclusive of adjustment of zero) or another timing estimate has been done based on typical float behavior. Simultaneously, the DATA\_MODE should be marked as "A" indicating an adjusted float, and the CLOCK\_OFFSET variable should be appropriately filled. 

The variable group described in §2.3.6 which includes the cycle timing information and other cycle descriptive variables is N\_CYCLE long. The cycle timing information is a subset of the information found in the N\_MEASUREMENT array. This array includes the best timing information which matches the JULD\_ADJUSTED times if filled, else JULD times from the N\_MEASUREMENT array., The times can be corrected for float clock drift or estimated. The JULD\_\*\_STATUS variables provide information on the state of the timing information. The N\_CYCLE array also includes several variables that pertain only to the entire cycle such as GROUNDED, CONFIG\_MISSION\_NUMBER, etc.

In the N\_MEASUREMENT group, the MEASUREMENT\_CODE variable must be correctly understood. This variable is designed to indicate where in the cycle the location, times and important float timing events. The Measurement Code Table (Reference Table 15 - <https://vocab.nerc.ac.uk/collection/R15/>) contains all the flags and their meanings for the MEASUREMENT\_CODE variable. This table is comprised of two parts - a) Absolute codes: measurement code (MC) values can be primary (mandatory) or secondary (highly desirable), and b) Relative codes: measurement code values are relative to an absolute code and are further divided into two parts: generic codes that can be used by a wide variety of floats and specific codes that are directly important to a specific float/measurement. 

All Primary and Secondary MC events that are experienced by the float are required to be present in the N\_MEASUREMENT array and redundantly in the N\_CYCLE variables. Secondary codes are codes that not as crucial as the primary codes, but it is still recommended they be filled. All other codes are voluntary.  Please note the term 'experienced by the float'. It is not necessary, nor best practice, to include measurement codes including primary or secondary codes, if the float is not programmed to activate an action described by the measurement code.  For example a float alternates cycle missions.  In even cycles n, the float does not enter a drift phase, but instead rises directly back to the surface after falling to depth.  In odd cycles n+1, the float enters a drift phase.  In the N\_MEASUREMENT array the even cycles n would not include measurement codes indicative of drift, such as MC250 or MC300.  But these codes would be included in odd cycles n+1.

If the float experiences an event but the time is not able to be determined, then most JULD variables are set to fill value and a \*\_STATUS = '9' is used in both the N\_MEASUREMENT and N\_CYCLE arrays. This indicates that it might be possible to estimate the timing of the event in the future and acts as a placeholder.

 If a float does not experience an event, then the fill values are used for all N\_CYCLE variables. These non-events do not get a placeholder in the N\_MEASUREMENT arrays as described above. 

For file naming conventions, see §4.1.3.


### Global attributes

The global attributes section is used for data discovery. It complies with NetCDF Climate and Forecast (CF) Metadata Conventions (version 1.6).

- <https://cfconventions.org/> 

The following global attributes should appear in the global section:  

// global attributes:
:title = "Argo float trajectory file";
:institution = "CORIOLIS"; 
:source = "Argo float"; 
:history = "2011-04-22T06:00:00Z creation";
:references = "http\://www\.argodatamgt.org/Documentation";
:comment = "free text";
:user\_manual\_version = "3.4";
:Conventions = “Argo-3.2 CF-1.6";
:featureType = "trajectory";
:comment\_on\_resolution = "PRES variable resolution depends on measurement code";_


| **Global attribute name** | **Definition** |
|---------------------------|----------------|
| title | A succinct description of what is in the dataset. |
| institution | Specifies where the original data was produced. |
| source | The method of production of the original data. If it was model-generated, source should name the model and its version, as specifically as could be useful. If it is observational, source should characterize it (e.g., "surface observation" or "radiosonde"). |
| history | Provides an audit trail for modifications to the original data. Well-behaved generic NetCDF filters will automatically append their name and the parameters with which they were invoked to the global history attribute of an input NetCDF file. We recommend that each line begin with a timestamp indicating the date and time of day that the program was executed. |
| references | Published or web-based references that describe the data or methods used to produce it. |
| comment | Miscellaneous information about the data or methods used to produce it. |
| user\_manual\_version | The version number of the user manual |
| Conventions | The conventions supported by this file, blank separated |
| featureType               | The NetCDF CF feature type. |
| comment\_on\_resolution   | Optional comment on parameter resolution |


### Dimensions and definitions


| **Name** | **Definition** | **Comment** |
|----------|----------------|-------------|
| DATE\_TIME | DATE\_TIME = 14;<br> | This dimension is the length of an ASCII date and time value.Date\_time convention is : YYYYMMDDHHMISSYYYY : yearMM : monthDD : dayHH : hour of the dayMI : minutesSS : secondsDate and time values are either in Universal Time (UTC) or float’s time.Examples : 20010105172834 : January 5<sup>th</sup> 2001 17:28:3419971217000000 : December 17<sup>th</sup> 1997 00:00:00 |
| STRING256<br>STRING64<br>STRING32<br>STRING16<br>STRING8<br>STRING4<br>STRING2 | STRING256 = 256;<br><br>STRING64 = 64;<br><br>STRING32 = 32;<br><br>STRING16 = 16;<br><br>STRING8 =   8;<br><br>STRING4 =   4;<br><br>STRING2 =   2;<br> | String dimensions from 2 to 256. |
| N\_PARAM | N\_PARAM = \<int value>;<br> | Maximum number of parameters measured or calculated for a pressure sample.Examples :(pressure, temperature) : N\_PARAM = 2(pressure, temperature, salinity) : N\_PARAM = 3(pressure, temperature, conductivity, salinity) : N\_PARAM = 4 |
| N\_MEASUREMENT | N\_MEASUREMENT = unlimited;<br> | This dimension is the number of recorded locations, cycle timings and measurements of the file. |
| N\_CYCLE | N\_CYCLE = \<int value>;<br> | Number of collected float cycles.  If all the cycles have been collected (i.e. if there are no missing cycles), it is the number of cycles performed by the float.  In this particular case, as some floats begin cycle numbering at 0, others at 1, in the former, N\_CYCLE = max(CYCLE\_NUMBER) +1.  In the latter, N\_CYCLE = max(CYCLE\_NUMBER)Example : N\_CYCLE = 100 |
| N\_HISTORY | N\_HISTORY = \<int value>;<br> | Maximum number of history records for a location. This dimension depends on the data setExample : N\_HISTORY = 10 |
| N\_VALUESxx | N\_VALUESxx = \<int value>;<br> | Maximum number of parameter measurements sampled at a given pressure level. This dimension depends on the data set. Example: N\_VALUES41 = 41. |
| N\_CALIB\_PARAM | N\_CALIB\_PARAM = \<int value>;<br> | Maximum number of calibrations performed on a float to fill the parameter adjusted fields. This dimension depends on the data set. Example: N\_CALIB\_PARAM = 3. |
| N\_CALIB\_JULD | N\_CALIB\_JULD = \<int value>;<br> | Maximum number of calibrations performed on a float to fill the JULD adjusted fields. This dimension depends on the data set. Example: N\_CALIB\_JULD = 3. |


### General information on the trajectory file

This section contains information about the whole file.

| **Name** | **Definition** | **Comment** |
|----------|----------------|-------------|
| DATA\_TYPE| char DATA\_TYPE(STRING16);<br> DATA\_TYPE:long\_name = "Data type";<br>DATA\_TYPE:conventions = "Argo reference table 1";<br>DATA\_TYPE:\_FillValue = " ";<br>| This field contains the type of data contained in the file.The list of acceptable data types is in the reference table 1 (<https://vocab.nerc.ac.uk/collection/R01/>).Example : Argo trajectory  |
| FORMAT\_VERSION| char FORMAT\_VERSION(STRING4);<br>FORMAT\_VERSION:long\_name = "File format version";<br>FORMAT\_VERSION:\_FillValue = " ";<br>| File format versionExample : "3.2"|
| HANDBOOK\_VERSION | char HANDBOOK\_VERSION(STRING4);<br>HANDBOOK\_VERSION:long\_name = "Data handbook version";<br>HANDBOOK\_VERSION:\_FillValue = " ";<br> | Version number of the data handbook.This field indicates that the data contained in this file are managed according to the policy described in the Argo data management handbook.Example : "1.2" |
| REFERENCE\_DATE\_TIME | char REFERENCE\_DATE\_TIME(DATE\_TIME);<br>REFERENCE\_DATE\_TIME:long\_name = "Date of reference for Julian days";<br>REFERENCE\_DATE\_TIME:conventions = "YYYYMMDDHHMISS";<br>REFERENCE\_DATE\_TIME:\_FillValue = " ";<br> | Date of reference for Julian days.The recommended reference date time is"19500101000000" : January 1<sup>st</sup> 1950 00:00:00 |
| DATE\_CREATION | char DATE\_CREATION(DATE\_TIME);<br>DATE\_CREATION:long\_name = "Date of file creation ";<br>DATE\_CREATION:conventions = "YYYYMMDDHHMISS";<br>DATE\_CREATION:\_FillValue = " ";<br> | Date and time (UTC) of creation of this file.Format : YYYYMMDDHHMISSExample :20011229161700 : December 29<sup>th</sup> 2001 16 :17 :00  |
| DATE\_UPDATE | char DATE\_UPDATE(DATE\_TIME);<br>DATE\_UPDATE:long\_name = "Date of update of this file";<br>DATE\_UPDATE:conventions = "YYYYMMDDHHMISS";<br>DATE\_UPDATE:\_FillValue = " ";<br> | Date and time (UTC) of update of this file.Format : YYYYMMDDHHMISS<br>Example :20011230090500 : December 30<sup>th</sup> 2001 09 :05 :00 |


### General information on the float

This section contains general information on the float.


| **Name** | **Definition** | **Comment** |
|----------|----------------|-------------|
| PLATFORM\_NUMBER | char PLATFORM\_NUMBER(STRING8);<br>PLATFORM\_NUMBER:long\_name = "Float unique identifier";<br>PLATFORM\_NUMBER:conventions = "WMO float identifier : A9IIIII";<br>PLATFORM\_NUMBER:\_FillValue = " ";<br> | WMO float identifier.WMO is the World Meteorological Organization.This platform number is unique.<br>Example : "6900045" |
| PROJECT\_NAME | char PROJECT\_NAME(STRING64);<br>PROJECT\_NAME:long\_name = "Name of the project";<br>PROJECT\_NAME:\_FillValue = " ";<br> | Name of the project which operates the float that performed the trajectory.Example : "GYROSCOPE" (EU project for ARGO program) |
| PI\_NAME | char PI\_NAME (STRING64);<br>PI\_NAME:long\_name = "Name of the principal investigator";<br>PI\_NAME:\_FillValue = " ";<br> | Name of the principal investigator responsible for the profiling float. Example: “Julia UITZ”.Valid PI names are listed in reference table R40: <https://vocab.nerc.ac.uk/collection/R40/> Multiple names can be concatenated, separated by commas. |
| TRAJECTORY\_PARAMETERS | char TRAJECTORY\_PARAMETERS(N\_PARAM, STRING64);<br>TRAJECTORY\_PARAMETERS:long\_name = "List of available parameters";<br>TRAJECTORY\_PARAMETERS:conventions = "Argo reference table 3";<br>TRAJECTORY\_PARAMETERS:\_FillValue = " ";<br> | List of parameters contained in this trajectory file.The parameter names are listed in reference table 3 (<https://vocab.nerc.ac.uk/collection/R03/>).Examples : "PRES"," TEMP", "PSAL", "CNDC", "DOXY", etc"PRES":  pressure"TEMP" : temperature"PSAL" : practical salinity"CNDC" :electrical conductivity"DOXY" : dissolved oxygen |
| DATA\_CENTRE | char DATA\_CENTRE(STRING2);<br>DATA\_CENTRE:long\_name = "Data centre in charge of float data processing";<br>DATA\_CENTRE:conventions = "Argo reference table 4";<br>DATA\_CENTRE:\_FillValue = " ";<br> | Code for the data centre in charge of the float data management.The data centre codes are described in the reference table 4 (<https://vocab.nerc.ac.uk/collection/R04/>).Example : "ME" for MEDS |
| DATA\_STATE\_INDICATOR | char DATA\_STATE\_INDICATOR(STRING4);<br>DATA\_STATE\_INDICATOR:long\_name = "Degree of processing the data have passed through";<br>DATA\_STATE\_INDICATOR:conventions = "Argo reference table 6";<br>DATA\_STATE\_INDICATOR:\_FillValue = " ";<br> | Degree of processing the data has passed through.The data state indicator is described in the reference table 6 (<https://vocab.nerc.ac.uk/collection/R06/>). |
| PLATFORM\_TYPE | char PLATFORM\_TYPE(STRING32);<br>PLATFORM\_TYPE:long\_name = "Type of float";<br>PLATFORM\_TYPE:conventions = "Argo reference table 23";<br>PLATFORM\_TYPE:\_FillValue = " ";<br> | Type of float listed in reference table 23 (<https://vocab.nerc.ac.uk/collection/R23/>). Example: SOLO, APEX, PROVOR, ARVOR, NINJA. |
| FLOAT\_SERIAL\_NO      | char FLOAT\_SERIAL\_NO(STRING32);<br>FLOAT\_SERIAL\_NO:long\_name = "Serial number of the float";<br>FLOAT\_SERIAL\_NO:\_FillValue = " ";<br> | This field should contain only the serial number of the float.Example : 1679 |
| FIRMWARE\_VERSION | char FIRMWARE\_VERSION(STRING64);<br>FIRMWARE\_VERSION:long\_name = "Instrument firmware version";<br>FIRMWARE\_VERSION:\_FillValue = " ";<br> | Firmware version of the float.Example :"013108"The dimension STRING32 instead of STRING64 remains accepted. |
| WMO\_INST\_TYPE | char WMO\_INST\_TYPE(STRING4);<br>WMO\_INST\_TYPE:long\_name = "Coded instrument type”;<br>WMO\_INST\_TYPE:conventions = "Argo reference table 8";<br>WMO\_INST\_TYPE:\_FillValue = " ";<br> | Instrument type from WMO code table 1770.A subset of WMO table 1770 is documented in the reference table 8 (<https://vocab.nerc.ac.uk/collection/R08/>).Example : 831 |
| POSITIONING\_SYSTEM    | char POSITIONING\_SYSTEM(STRING8);<br>POSITIONING\_SYSTEM:long\_name = "Positioning system";<br>POSITIONING\_SYSTEM:\_FillValue = " ";<br> | Name of the system used to derive the float locations, see reference table 9 (<https://vocab.nerc.ac.uk/collection/R09/>).Example : ARGOS |


### N\_MEASUREMENT dimension variable group

This section describes the variables found in the N\_MEASUREMENT dimension variable group. In this variable group you find the unadjusted data as reported by the float, adjusted timing, the reported locations, as well as measurements performed along the surface and subsurface trajectory. 

N\_MEASUREMENT is the number of locations, cycle timings, and measurements received or estimated from information sent by the float. If a cycle is missed, nothing is entered into the N\_MEASUREMENT array - e.g. no fill values are allowed to indicate a missing cycle.

The N\_MEASURMENT array should be arranged first by CYCLE\_NUMBER and then by the order the events for that cycle occurred.  Some data within the netCDF may not have a time attached to it, but it should still be placed as close as possible to its origination time.  Because the order of the N\_MEASUREMENT array is based on time,  MEASUREMENT\_CODE will not be ascending for every cycle, but JULD is usually ascending (unless a clock offset has been applied and then the JULD variable may have an inversion) and JULD\_ADJUSTED is always ascending. To construct the trajectory netCDF a full understanding of when the float data was gathered within the cycle is necessary.

JULD contains the raw timing values either from the satellite system or from the float. The values in JULD cannot be estimated, nor altered such as for clock drift.

JULD\_ADJUSTED contains the best estimate of float timing available for this float. If necessary, it contains adjusted timing variables due to clock drift. The times can be adjusted either in real time or in delayed mode due to clock drift or estimation of times based on float behavior by a float expert. The JULD\_ADJUSTED\_STATUS variable indicates how the JULD\_ADJUSTED value  is filled and indicates whether the time is estimated or measured. The JULD\_ADJUSTED\_QC contains the QC flags for the adjusted times. This may lead to times where JULD\_ADJUSTED is filled, but JULD contains 'FillValue'. That is because the time is estimated rather than measured.

In R-mode, no times are adjusted, but times may be estimated and placed within JULD\_ADJUSTED with the JULD\_ADJUSTED\_STATUS flag set to ‘1’ indicating an estimated value.  Non-adjusted times do not need to be carried down to the JULD\_ADJUSTED array, so this array may be sparse or even empty. No estimated times are allowed in the JULD variable.

In A-mode, adjustments are made, typically to PSAL and PRES, but others may be adjusted as well such as JULD if real-time correction of clock drift is applied.  If an adjustment is made, all values must be carried down to the ADJUSTED variables with the appropriate adjustment applied.  Real time estimates will also be present in ‘A’ files.  Non-zero adjustments will need to be applied to any present estimates.

In D-mode, all adjustments and estimations are complete.  Similar to the ‘A’ file, there must be correspondence between the ADJUSTED and non-ADJUSTED fields.  This means that all values must be carried down to the ADJUSTED field. ADJUSTED variables may have a value while the corresponding non-ADJUSTED variable is 'FillValue' due to the presence of an estimated value.  The opposite is not allowed.  There cannot be a non-ADJUSTED value and 'FillValue' in the corresponding ADJUSTED variable.

CYCLE\_NUMBER contains the cycle number of the cycle that is assigned in real time. This cycle number must match the profile cycle number, which is the number recorded in the CYCLE\_NUMBER(N\_PROF) variable in profile files.

CYCLE\_NUMBER\_INDEX indicates which cycle number information is contained in that index of the N\_CYCLE array. For example, CYCLE\_NUMBER\_INDEX(4)=3 means the 4th element of all 34 N\_CYCLE variables is associated with the WMO\_003.nc profile file. This might happen if the float's first cycle has a cycle number of zero rather than one. Additionally, all the elements of the N\_MEASUREMENT variables for which CYCLE\_NUMBER = 3 are likewise associated with the 4th N\_CYCLE elements and with the WMO\_003.nc profile file. This clearly links the index in the N\_CYCLE array to the cycle number in the N\_MEASUREMENT array. 

Additionally, CYCLE\_NUMBER = -1 indicates the float's launch and the JULD and LATITUDE and LONGITUDE variables should contain the float's launch time and location. 

CYCLE\_NUMBER\_ADJUSTED contains a cycle numbering which has been assessed and adjusted to be correct, especially for the purposes of trajectory calculations. If a cycle is recovered during delayed mode and no profile file is created, the cycle must be added into the CYCLE\_NUMBER\_ADJUSTED and CYCLE\_NUMBER\_ADJUSTED\_INDEX variables. Two examples of recovered cycles are below. 

The first example is where cycle number 5 is recovered in delayed mode. The cycle number variables must be rewritten as follows:

CYCLE\_NUMBER 1, 2, 3, 4, \_, 6, 7, 8, 9, 10, 11,…,

CYCLE\_NUMBER\_INDEX 1, 2, 3, 4, \_, 6, 7, 8, 9, 10, 11,…,

CYCLE\_NUMBER\_ADJUSTED 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \_

 CYCLE\_NUMBER\_ADJUSTED\_INDEX  1, 2, 3, 4, 5, 6, 7, 8 9, 10, \_ 

Here, FillValue is added to CYCLE\_NUMBER and CYCLE\_NUMBER\_INDEX to indicate that no profile file exists with cycle number 5.

A second example of an error that might be discovered in cycle number in delayed mode involves floats that do not send cycle number and for which cycle number must be calculated. Here, cycle number 5 was incorrectly skipped in real time and is introduced in delayed mode: 

CYCLE\_NUMBER 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12,…

CYCLE\_NUMBER\_INDEX 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12,…

CYCLE\_NUMBER\_ADJUSTED 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, \_, \_

CYCLE\_NUMBER\_ADJUSTED\_INDEX 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, \_, \_ 

Here, CYCLE\_NUMBER = 6 which was assigned in real time, should actually be assigned cycle number = 5 as reflected by the CYCLE\_NUMBER\_ADJUSTED variable. 

CYCLE\_NUMBER always corresponds to the profile cycle number. To look for the cycle that matches the profile cycle number, users must look in the CYCLE\_NUMBER variable for the cycle number they are interested in. If the CYCLE\_NUMBER\_ADJUSTED variable is 'FillValue', then this cycle is in real time mode and no corrected cycle number exists. If the CYCLE\_NUMBER\_ADJUSTED variable is filled, this is the correct cycle number as determined during delayed mode. For the previous example, profile cycle number 6 corresponds to CYCLE\_NUMBER = 6 and CYCLE\_NUMBER\_ADJUSTED = 5.

\<PARAM> contains the uncorrected real-time data transmitted by the floats. 

The values in \<PARAM> should never be altered.  \<PARAM>\_QC contains QC flags that pertain to the values in \<PARAM>. Values in \<PARAM>\_QC are set initially in real time by the automatic real-time tests. 

They are later modified in 'D' mode at levels where the QC flags are set incorrectly by the real-time procedures, and where erroneous data are not detected by the real-time procedures. 

Each parameter can be adjusted. In that case, \<PARAM>\_ADJUSTED contains the adjusted values, \<PARAM>\_ADJUSTED\_QC contains the QC flags set by the delayed-mode process, and \<PARAM>\_ADJUSTED\_ERROR contains the adjustment uncertainties. 

A file A-mode processing contains adjusted sections with fill values (\<PARAM>\_ADJUSTED, \<PARAM>\_ADJUSTED\_QC and \<PARAM>\_ADJUSTED\_ERROR). This is the same for all other ADJUSTED variables (e.g. JULD\_ADJUSTED).

When no parameter is measured along the trajectory, N\_PARAM (number of parameters) and any fields relative to parameter are not in the file : \<PARAM>, \<PARAM>\_QC, \<PARAM>\_ADJUSTED, \<PARAM>\_ADJUSTED\_QC, \<PARAM>\_ADJUSTED\_ERROR and TRAJECTORY\_PARAMETERS.


**Iridium and estimated positions:**

Iridium-based or estimated positions are included if no GPS fix could be obtained that is considered good in real-time. POSITIONING\_SYSTEM is used to indicate that multiple positioning systems are present in the trajectory file (see reference table 9 - <https://vocab.nerc.ac.uk/collection/R09/>). Used are "I" (for Iridium) or "U" (for estimated) in POSITION\_ACCURACY (Table 5 - <https://vocab.nerc.ac.uk/collection/R05/>). If both AXES\_ERROR\_ELLIPSE\_MAJOR and AXES\_ERROR\_ELLIPSE\_MINOR values are the same AXES\_ERROR\_ELLIPSE\_ANGLE is not needed (set to FillValue).     &#x20;

**RAFOS positions:**

A similar approach is used storing the error and indicating that the position comes from RAFOS estimates. POSITIONING\_SYSTEM remains filled with the primary system, i.e. GPS or Argos rather than RAFOS.  POSITION\_ACCURACY becomes ‘R’ and the MEASUREMENT\_CODE for positions and associated times during drift is 275.

Details on how the RAFOS positions were derived can not be stored in the traj.nc file. These will be in a traj\_aux file.


| **Name** | **definition** | **comment** |
| JULD | double JULD(N\_MEASUREMENT);<br>JULD:long\_name = "Julian day (UTC) of each measurement relative to REFERENCE\_DATE\_TIME";<br>JULD:standard\_name = "time";<br>JULD:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD:resolution = X;<br>JULD:\_FillValue = 999999.;<br>JULD:axis = "T";<br> | Julian day of the location (or measurement).The integer part represents the day, the decimal part represents the time of the measurement.Date and time are in universal time coordinates.The Julian day is relative to REFERENCE\_DATE\_TIME.Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_STATUS | char JULD\_STATUS(N\_MEASUREMENT);<br>JULD\_STATUS:long\_name=”Status of the date and time”JULD\_STATUS:conventions = “Argo reference table 19";<br>JULD\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>).Example:2 : Value is transmitted by the float  |
| JULD\_QC | char JULD\_QC(N\_MEASUREMENT);<br>JULD\_QC:long\_name = "Quality on date and time";<br>JULD\_QC:conventions = "Argo reference table 2";<br>JULD\_QC:\_FillValue = " ";<br> | Quality flag on JULD date and time.The flag scale is described in the reference tables 2 ([https://vocab.nerc.ac.uk/collection/RR2/](https://vocab.nerc.ac.uk/collection/RR2) for real-time and <https://vocab.nerc.ac.uk/collection/RD2/> for delayed-mode).Example :1: The date and time seem correct. |
| JULD\_ADJUSTED | double JULD\_ADJUSTED(N\_MEASUREMENT);<br>JULD\_ADJUSTED:long\_name = "Adjusted julian day (UTC) of each measurement relative to REFERENCE\_DATE\_TIME";<br>JULD\_ADJUSTED:standard\_name = "time";<br>JULD\_ADJUSTED:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_ADJUSTED:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_ADJUSTED:resolution = X;<br>JULD\_ADJUSTED:\_FillValue = 999999.;<br>JULD:axis = "T";<br> | Adjusted Julian day of the location (or measurement).The integer part represents the day, the decimal part represents the time of the measurement.Date and time are in universal time coordinates.The Julian day is relative to REFERENCE\_DATE\_TIME.The date may be adjusted due to float clock drift or expert review\.Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_ADJUSTED\_STATUS | char JULD\_ADJUSTED\_STATUS(N\_MEASUREMENT);<br>JULD\_ADJUSTED\_STATUS:long\_name=”Status of the JULD\_ADJUSTED date”JULD\_ADJUSTED\_STATUS:conventions = “Argo reference table 19";<br>JULD\_ADJUSTED\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>).Example:2 : Value is transmitted by the float |
| JULD\_ADJUSTED\_QC | char JULD\_ADJUSTED\_QC(N\_MEASUREMENT);<br>JULD\_ADJUSTED\_QC:long\_name = "Quality on adjusted date and time";<br>JULD\_ADJUSTED\_QC:conventions = "Argo reference table 2";<br>JULD\_ADJUSTED\_QC:\_FillValue = " ";<br> | Quality flag on JULD\_ADJUSTED date and time.The flag scale is described in the reference tables 2 ([https://vocab.nerc.ac.uk/collection/RR2/](https://vocab.nerc.ac.uk/collection/RR2) for real-time and <https://vocab.nerc.ac.uk/collection/RD2/> for delayed-mode).Example :1 : The date and time seem correct. |
| LATITUDE | double LATITUDE(N\_MEASUREMENT);<br>LATITUDE:long\_name = "Latitude of each location";<br>LATITUDE:standard\_name = "latitude";<br>LATITUDE:units = "degree\_north";<br>LATITUDE:\_FillValue = 99999.;<br>LATITUDE:valid\_min = -90.;<br>LATITUDE:valid\_max = 90.;<br>LATITUDE:axis = "Y";<br> | Latitude of the location (or measurement).Unit : degree northExample : 44.4991 for 44° 29’ 56.76’’ N |
| LONGITUDE | double LONGITUDE(N\_MEASUREMENT);<br>LONGITUDE:long\_name = "Longitude of each location";<br>LONGITUDE:standard\_name = "longitude";<br>LONGITUDE:units = "degree\_east";<br>LONGITUDE:\_FillValue = 99999.;<br>LONGITUDE:valid\_min = -180.;<br>LONGITUDE:valid\_max = 180.;<br>LONGITUDE:axis = "X";<br> | Longitude of the location (or measurement).Unit : degree eastExample : 16.7222 for 16° 43’ 19.92’’ E |
| POSITION\_ACCURACY | char POSITION\_ACCURACY(N\_MEASUREMENT);<br>POSITION\_ACCURACY:long\_name = "Estimated accuracy in latitude and longitude";<br>POSITION\_ACCURACY:conventions = "Argo reference table 5";<br>POSITION\_ACCURACY:\_FillValue = " ";<br> | Position accuracy received from the positioning system. The location classes from ARGOS are described in the reference table 5 (<https://vocab.nerc.ac.uk/collection/R05/>).A "G" indicates the GPS positioning system.Examples :  3 for a latitude and longitude accuracy < 250 m.G for GPS accuracy |
| POSITION\_QC | char POSITION\_QC(N\_MEASUREMENT);<br>POSITION\_QC:long\_name = "Quality on position";<br>POSITION\_QC:conventions = "Argo reference table 2";<br>POSITION\_QC:\_FillValue = " ";<br> | Quality flag on position.The flag on position is set according to (LATITUDE, LONGITUDE, JULD) quality.The flag scale is described in the reference tables 2 ([https://vocab.nerc.ac.uk/collection/RR2/](https://vocab.nerc.ac.uk/collection/RR2) for real-time and <https://vocab.nerc.ac.uk/collection/RD2/> for delayed-mode).Example : 1 : position seems correct. |
| CYCLE\_NUMBER | int CYCLE\_NUMBER(N\_MEASUREMENT);<br>CYCLE\_NUMBER:long\_name = "Float cycle number of the measurement";<br>CYCLE\_NUMBER:conventions = "0...N, 0 : launch cycle, 1 : first complete cycle";<br>CYCLE\_NUMBER:\_FillValue = 99999;<br> | Cycle number of the float for this series of measurements, locations and timings. Some floats begin with a cycle 0 and some begin at cycle number 1.  Cycle number is -1 for the float's launch and includes the time and location.For one cycle number, there are usually several locations/measurements received.  This cycle number must match the profile cycle number.Example : 17 for measurements performed during the 17<sup>th</sup> cycle of the float. |
| CYCLE\_NUMBER\_ADJUSTED | int CYCLE\_NUMBER\_ADJUSTED (N\_MEASUREMENT);<br>CYCLE\_NUMBER\_ADJUSTED:long\_name = "Adjusted float cycle number of the measurement";<br>CYCLE\_NUMBER\_ADJUSTED:conventions = "0...N, 0 : launch cycle, 1 : first complete cycle";<br>CYCLE\_NUMBER\_ADJUSTED:\_FillValue = 99999;<br> | Adjusted cycle number of the float for this series of measurements, locations and timings. Some floats begin with a cycle 0 and some begin at cycle number 1.  For one cycle number, there are usually several locations/measurements received.  Sometimes cycle numbers are assigned erroneously and need to be corrected.  This variable contains the corrected cycle numbers.Example : 17 for measurements performed during the 17<sup>th</sup> cycle of the float. |
| MEASUREMENT\_CODE | int MEASUREMENT\_CODE (N\_MEASUREMENT);<br>MEASUREMENT\_CODE:long\_name = "Flag referring to a measurement event in the cycle";<br>MEASUREMENT\_CODE:conventions = "Argo reference table 15";<br>MEASUREMENT\_CODE:\_FillValue = 99999;<br> | Flag for each event in the cycle which corresponds to Argo reference table 15 (<https://vocab.nerc.ac.uk/collection/R15/>).  Example:  100 : All measurements made at start of descent to drift pressure .  Could be time, location, surface pressure, etc.  |
| \<PARAM> | float \<PARAM>(N\_MEASUREMENT);<br>\<PARAM>:long\_name = "\<X>";<br>\<PARAM>:standard\_name = "\<X>";<br>\<PARAM>:\_FillValue = \<X>;<br>\<PARAM>:units = "\<X>";<br> \<PARAM>:valid\_min = \<X>;<br>\<PARAM>:valid\_max = \<X>;<br>\<PARAM>:C\_format = "\<X>";<br>\<PARAM>:FORTRAN\_format = "\<X>";<br> | \<PARAM> contains the original values of a parameter listed in the "code" column of reference table 3 (<https://vocab.nerc.ac.uk/collection/R03/>).\<X> : these fields are specified in the columns of the reference table 3 (<https://vocab.nerc.ac.uk/collection/R03/>). |
| \<PARAM>\_QC | char \<PARAM>\_QC(N\_MEASUREMENT);<br>\<PARAM>\_QC:long\_name = "quality flag";<br>\<PARAM>\_QC:conventions = "Argo reference table 2";<br>\<PARAM>\_QC:\_FillValue = " ";<br> | Quality flag applied on each \<PARAM> value.The flag scale is specified in tables 2 ([https://vocab.nerc.ac.uk/collection/RR2/](https://vocab.nerc.ac.uk/collection/RR2) for real-time and <https://vocab.nerc.ac.uk/collection/RD2/> for delayed-mode). |
| \<PARAM>\_ADJUSTED | float \<PARAM>\_ADJUSTED(N\_MEASUREMENT);<br>\<PARAM>\_ADJUSTED:long\_name = "\<X>";<br>\<PARAM>\_ADJUSTED:standard\_name = "\<X>";<br>\<PARAM>\_ADJUSTED:\_FillValue = \<X>;<br>\<PARAM>\_ADJUSTED:units = "\<X>";<br> \<PARAM>\_ADJUSTED:valid\_min = \<X>;<br>\<PARAM>\_ADJUSTED:valid\_max = \<X>;<br>\<PARAM>\_ADJUSTED:comment = "\<X>";<br>\<PARAM>\_ADJUSTED:C\_format = "\<X>";<br>\<PARAM>\_ADJUSTED:FORTRAN\_format = "\<X>";<br>\<PARAM>\_ADJUSTED:resolution= \<X>;<br> | \<PARAM>\_ADJUSTED contains the adjusted values derived from the original values of the parameter.\<X> : these fields are specified in the columns of the reference table 3 (<https://vocab.nerc.ac.uk/collection/R03/>).When no adjustment is performed, the FillValue is inserted.\<PARAM>\_ADJUSTED is mandatory for core and bgc parameters, but not for intermediate parameter~~s~~. |
| \<PARAM>\_ADJUSTED\_QC | char \<PARAM>\_ADJUSTED\_QC(N\_MEASUREMENT);<br>\<PARAM>\_ADJUSTED\_QC:long\_name = "quality flag";<br>\<PARAM>\_ADJUSTED\_QC:conventions = "Argo reference table 2";<br>\<PARAM>\_ADJUSTED\_QC:\_FillValue = " ";<br> | Quality flag applied on each \<PARAM>\_ADJUSTED values.The flag scale is specified in reference tables 2 ([https://vocab.nerc.ac.uk/collection/RR2/](https://vocab.nerc.ac.uk/collection/RR2) for real-time and <https://vocab.nerc.ac.uk/collection/RD2/> for delayed-mode).When no adjustment is performed, the FillValue is inserted.\<PARAM>\_ADJUSTED\_QC is mandatory for core and bgc parameters, but not for intermediate parameters. |
| \<PARAM>\_ADJUSTED\_ERROR | float \<PARAM>\_ADJUSTED\_ERROR(N\_MEASUREMENT);<br>\<PARAM>\_ADJUSTED\_ERROR:long\_name = "Contains the error on the adjusted values as determined by the delayed mode QC process.";<br>\<PARAM>\_ADJUSTED\_ERROR:\_FillValue = \<X>;<br>\<PARAM>\_ADJUSTED\_ERROR:units = "\<X>";<br>\<PARAM>\_ADJUSTED\_ERROR:C\_format = "\<X>";<br>\<PARAM>\_ADJUSTED\_ERROR:FORTRAN\_format = "\<X>";<br>\<PARAM>\_ADJUSTED\_ERROR:resolution= \<X>;<br>                                                           | \<PARAM>\_ADJUSTED\_ERROR contains the error on the adjusted values of the parameter.\<X> : these fields are specified in the columns of the reference table 3 (<https://vocab.nerc.ac.uk/collection/R03/>).When no adjustment is performed, the FillValue is inserted.\<PARAM>\_ADJUSTED\_ERROR is mandatory for core and bgc parameters, but not for intermediate parameters. |
| AXES\_ERROR\_ELLIPSE\_MAJOR | float AXES\_ERROR\_ELLIPSE\_MAJOR(N\_MEASUREMENT);<br>AXES\_ERROR\_ELLIPSE\_MAJOR.long\_name = “Semi-major axis of error ellipse from positioning system”;<br>AXES\_ERROR\_ELLIPSE\_MAJOR:units = "meters";<br>AXES\_ERROR\_ELLIPSE\_MAJOR:\_FillValue = 99999.;<br> | Semi-major axis of error ellipse reported by the positioning system. |
| AXES\_ERROR\_ELLIPSE\_MINOR | float AXES\_ERROR\_ELLIPSE\_MINOR(N\_MEASUREMENT);<br>AXES\_ERROR\_ELLIPSE\_MINOR.long\_name = “Semi-minor axis of error ellipse from positioning system”;<br>AXES\_ERROR\_ELLIPSE\_MINOR:units = "meters";<br>AXES\_ERROR\_ELLIPSE\_MINOR:\_FillValue = 99999.;<br> | Semi-minor axis of error ellipse reported by the positioning system. |
| AXES\_ERROR\_ELLIPSE\_ANGLE | float AXES\_ERROR\_ELLIPSE\_ANGLE(N\_MEASUREENT);<br>AXES\_ERROR\_ELLIPSE\_ANGLE.long\_name = “Angle of error ellipse from positioning system”;<br>AXES\_ERROR\_ELLIPSE\_ANGLE:units = "Degrees (from North when heading East)";<br>AXES\_ERROR\_ELLIPSE\_ANGLE:\_FillValue = 99999.;<br> | Angle of error ellipse reported by the positioning system. |
| SATELLITE\_NAME | char SATELLITE\_NAME(N\_MEASUREMENT);<br>SATELLITE\_NAME.long\_name = “Satellite name from positioning system”;<br>SATELLITE\_NAME.FillValue = ”  “;<br> | Satellite name from positioning system.SATELLITE\_NAME is only used for Argos position |
| TRAJECTORY\_PARAMETER\_DATA\_MODE | char TRAJECTORY\_PARAMETER\_DATA\_MODE(N\_MEASUREMENT, N\_PARAM);<br>TRAJECTORY\_PARAMETER\_DATA\_MODE:long\_name = "Delayed mode or real time data";<br>TRAJECTORY\_PARAMETER\_DATA\_MODE:conventions = "R : real time;<br> D : delayed mode;<br> A : real time with adjustment";<br>TRAJECTORY\_PARAMETER\_DATA\_MODE:\_FillValue = " ";<br> | Indicates the availability of adjustment of each TRAJECTORY\_PARAMETERS. ‘R’ = no adjusted value is available. ‘A’ = real-time adjusted value is available. ‘D’ = delayed-mode adjusted value is available. |
| JULD\_DATA\_MODE | char JULD\_DATA\_MODE(N\_MEASUREMENT);<br>JULD\_DATA\_MODE:long\_name = "Delayed mode or real time data";<br>JULD\_DATA\_MODE:conventions "R : real time;<br> D : delayed mode;<br> A : real time with adjustment";<br>JULD\_DATA\_MODE:-FillValue = " ";<br> | Indicates the availability of adjustment/estimation of the Julian day of the measurement, which is stored in JULD\_ADJUSTED. The raw parameter JULD stores the original telemetered value, or FillValue (if not available). If JULD\_DATA\_MODE = ‘R’, JULD\_ADJUSTED = FillValue. If JULD\_DATA\_MODE = ‘A’, JULD\_ADJUSTED = real-time adjusted/estimated value. If JULD\_DATA\_MODE = ‘D’, JULD\_ADJUSTED = delayed-mode adjusted/estimated value. |
| ~~\<PARAM>\_MED~~                 | ~~float \<PARAM>\_MED(N\_MEASUREMENT);<br>~~~~\<PARAM>\_MED:long\_name = "Median value of the set of measurements used to compute \<PARAM>(N\_MEASUREMENT) averaged value";<br>~~~~\<PARAM>\_MED:\_FillValue = \<X>;<br>~~~~\<PARAM>\_MED:units = \<X>;<br>~~~~\<PARAM>\_MED:valid\_min = \<X>;<br>~~~~\<PARAM>\_MED:valid\_max = \<X>;<br>~~~~\<PARAM>\_MED:comment = "\<X>";<br>~~~~\<PARAM>\_MED:C\_format = "\<X>";<br>~~~~\<PARAM>\_MED:FORTRAN\_format = "\<X>";<br>~~~~\<PARAM>\_MED:resolution = \<X>;<br>~~ | ~~Optional variable used to store statistical information (median value) of the set of measurements used to compute the averaged values in \<PARAM>. This statistical information is provided by some floats, e.g. PROVOR CTS4 and CTS5.~~~~\<PARAM> and \<X> are specified in Reference Table 3.~~~~N\_MEASUREMENT is not replaced by its integer value.~~                                                                                                            |
| ~~\<PARAM>\_STD~~                 | ~~float \<PARAM>\_STD(N\_MEASUREMENT);<br>~~~~\<PARAM>\_STD:long\_name = "Standard deviation of the set of measurements used to compute \<PARAM>(N\_MEASUREMENT) averaged value";<br>~~~~\<PARAM>\_STD:\_FillValue = \<X>;<br>~~~~\<PARAM>\_STD:units = \<X>;<br>~~~~\<PARAM>\_STD:comment = "\<X>";<br>~~~~\<PARAM>\_STD:C\_format = "\<X>";<br>~~~~\<PARAM>\_STD:FORTRAN\_format = "\<X>";<br>~~~~\<PARAM>\_STD:resolution = \<X>;<br>~~                                                                   | ~~Optional variable used to store statistical information (standard deviation) of the set of measurements used to compute the averaged values in \<PARAM>. This statistical information is provided by some floats, e.g. PROVOR CTS4 and CTS5.~~~~\<PARAM> and \<X> are specified in Reference Table 3.~~~~N\_MEASUREMENT is not replaced by its integer value.~~                                                                                                      |


#### How to report unusual Pressure resolutions in the N\_MEASUREMENT variable group of the TRAJ file

In the N\_MEASUREMENT array of the TRAJ file, the pressure resolution may differ according to the MEASUREMENT\_CODE.

How to keep the information in the file?

- add a "comment\_on\_resolution" attribute to the variable to inform the user,

- add a "comment\_on\_resolution" global attribute to the file

For example, for APEX and PROVOR floats some pressures are provided in bars whereas most of them are in dbar. Thus, in this case:

- PRES:resolution = 0.1f;

- PRES:comment\_on\_resolution = "PRES resolution is 0.1 dbar, except for measurement codes \[150 189 198 289 297 298 389 398 489 497 498 589 901] for which PRES resolution is 1 bar";

You may add a comment\_on\_resolution global attribute

- :comment\_on\_resolution = "PRES variable resolution may be lower than nominal depending on measurement codes"


### 2.3.6 N\_CYCLE dimension variable group

This section contains information on the variables with dimension N\_CYCLE. They include variables that contain the best estimate of float timing. 

Each field in this section has a N\_CYCLE dimension. 

N\_CYCLE is the number of collected cycles performed by the float.  It is a dimension, thus it may not equal the maximum cycle number within the file.

The N\_CYCLE array should be ordered by CYCLE\_NUMBER\_INDEX.

The cycle definition is available at §1.6. Cycle is defined as a series of actions, including collection of data, made by a float that ends with transmission of data. If the float fails to collect nor transmit data, a cycle has not occurred and CYCLE\_NUMBER\_INDEX should not be incremented. 

Floats begin with different cycle numbers depending on float type. To understand how the N\_CYCLE dimension variable group relates to the N\_MEASUREMENT variable group, the user must consult the CYCLE\_NUMBER\_INDEX variable. This variable indicates the cycle number of the float information that is contained in that particular N\_CYCLE index. For example, to find the N\_CYCLE information that corresponds to CYCLE\_NUMBER = 1, look for CYCLE\_NUMBER\_INDEX = 1. 

Additionally, CYCLE\_NUMBER\_INDEX is the number of the profile cycle associated with the trajectory cycle in that index of the N\_CYCLE array. 

If any errors are discovered in how the cycle numbers were assigned in real-time, or if additional cycles are recovered in delayed mode, the CYCLE\_NUMBER\_INDEX\_ADJUSTED variable is adjusted accordingly. 

CYCLE\_NUMBER\_INDEX always corresponds to the profile cycle number. To look for the cycle that matches the profile cycle number, users must look in the CYCLE\_NUMBER\_INDEX variable for the cycle number they are interested in. If the CYCLE\_NUMBER\_INDEX\_ADJUSTED variable contains 'FillValue', then this cycle is in real time mode and no corrected cycle number exists. If the CYCLE\_NUMBER\_INDEX\_ADJUSTED variable is filled, this is the correct cycle number as determined during delayed mode. 

**When a cycle is missing (e.g. no data received), no fill values are used to indicate a missing cycle.**

| **Name** | **Definition** | **Comment** |
|----------|----------------|-------------|
| JULD\_DESCENT\_START | double JULD\_DESCENT\_START(N\_CYCLE);<br>JULD\_DESCENT\_START:long\_name = "Descent start date of the cycle";<br>JULD\_DESCENT\_START:standard\_name = "time";<br>JULD\_DESCENT\_START:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_DESCENT\_START:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_DESCENT\_START:resolution = X;<br>JULD\_DESCENT\_START:\_FillValue = 999999.;<br> | Julian day (UTC) when float leaves the surface and begins descent Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_DESCENT\_START\_STATUS | char JULD\_DESCENT\_START\_STATUS(N\_CYCLE);<br>JULD\_DESCENT\_START\_STATUS:long\_name = "Status of descent start date of the cycle";<br>JULD\_DESCENT\_START\_STATUS:conventions = “Argo reference table 19";<br>JULD\_DESCENT\_START\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>).Example:'2' : Value is transmitted by the float |
| JULD\_FIRST\_STABILIZATION | double JULD\_FIRST\_STABILIZATION(N\_CYCLE);<br>JULD\_FIRST\_STABILIZATION:long\_name = “Time when a float first becomes water-neutral”;<br>JULD\_FIRST\_STABILIZATION:standard\_name = "time";<br>JULD\_FIRST\_STABILIZATION:units = days since 1950-01-01 00:00:00 UTC”;<br>JULD\_FIRST\_STABILIZATION: conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_FIRST\_STABILIZATION:resolution = X;<br>JULD\_FIRST\_STABILIZATION:\_FillValue = 999999. | Julian day (UTC) of time when a float first becomes water-neutral.  Example :18833.8013889885 : July 25 2001 19:14:00  |
| JULD\_FIRST\_STABILIZATION\_STATUS | char JULD\_FIRST\_STABILIZATION\_STATUS(N\_CYCLE);<br>JULD\_FIRST\_STABILIZATION\_STATUS:long\_name = “Status of time when a float first becomes water-neutral”;<br>JULD\_FIRST\_STABILIZATION\_STATUS:conventions = "Argo reference table 19";<br>JULD\_STABILIZATION\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>).Example:'2' : Value is transmitted by the float |
| JULD\_DESCENT\_END | double JULD\_DESCENT\_END(N\_CYCLE);<br>JULD\_DESCENT\_END:long\_name = "Descent end date of the cycle";<br>JULD\_DESCENT\_END:standard\_name = "time";<br>JULD\_DESCENT\_END:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_DESCENT\_END:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_DESCENT\_END:resolution = X;<br>JULD\_DESCENT\_END:\_FillValue = 999999.;<br> | Julian day (UTC) when float first approaches within 3% of the eventual drift pressure. Float may be transitioning from the surface or from a deep profile.  Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_DESCENT\_END\_STATUS | char JULD\_DESCENT\_END\_STATUS(N\_CYCLE);<br>JULD\_DESCENT\_END\_STATUS:long\_name = "Status of descent end date of the cycle";<br>JULD\_DESCENT\_END\_STATUS:conventions = "Argo reference table 19";<br>JULD\_DESCENT\_END\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>).Example:'2' : Value is transmitted by the float |
| JULD\_PARK\_START | double JULD\_PARK\_START(N\_CYCLE);<br>JULD\_PARK\_START:long\_name = "Drift start date of the cycle";<br>JULD\_PARK\_START:standard\_name = "time";<br>JULD\_PARK\_START:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_PARK\_START:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_PARK\_START:resolution = X;<br>JULD\_PARK\_START:\_FillValue = 999999.;<br> | Julian day (UTC) when the float transitions to its Park or Drift mission.  This variable is based on float logic based on a descent timer (i.e. SOLO), or be based on measurements of pressure (i.e. Provor).Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_PARK\_START\_STATUS | char JULD\_PARK\_START\_STATUS(N\_CYCLE);<br>JULD\_PARK\_START\_STATUS:long\_name = "Status of drift start date of the cycle";<br>JULD\_PARK\_START\_STATUS:conventions = "Argo reference table 19";<br>JULD\_PARK\_START\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>).Example:'2' : Value is transmitted by the float |
| JULD\_PARK\_END | double JULD\_PARK\_END(N\_CYCLE);<br>JULD\_PARK\_END:long\_name = "Drift end date of the cycle";<br>JULD\_PARK\_END:standard\_name = "time";<br>JULD\_PARK\_END:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_PARK\_END:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_PARK\_END:resolution = X;<br>JULD\_PARK\_END:\_FillValue = 999999.;<br> | Julian day (UTC) when float exits from its Park or Drift mission. It may next rise to the surface (AST) or sink to profile depth (DDET)Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_PARK\_END\_STATUS | char JULD\_PARK\_END\_STATUS(N\_CYCLE);<br>JULD\_PARK\_END\_STATUS:long\_name = "Status of drift end date of the cycle";<br>JULD\_PARK\_END\_STATUS:conventions = "Argo reference table 19";<br>JULD\_PARK\_END\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>).Example:'2' : Value is transmitted by the float |
| JULD\_DEEP\_DESCENT\_END | double JULD\_DEEP\_DESCENT\_END(N\_CYCLE);<br>JULD\_DEEP\_DESCENT\_END:long\_name = "Deep descent end date of the cycle";<br>JULD\_DEEP\_DESCENT\_END:standard\_name = "time";<br>JULD\_DEEP\_DESCENT\_END:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_DEEP\_DESCENT\_END:conventions = "Relative julian days with decimal part (as parts of day)»;<br>JULD\_DEEP\_DESCENT\_END:resolution = X;<br>JULD\_DEEP\_DESCENT\_END:\_FillValue = 999999.;<br> | Julian day (UTC) when float first approaches within 3% of the eventual deep drift/profile pressure. Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_DEEP\_DESCENT\_END\_STATUS | char JULD\_DEEP\_DESCENT\_END\_STATUS(N\_CYCLE);<br>JULD\_DEEP\_DESCENT\_END\_STATUS:long\_name = "Status of deep descent end date of the cycle";<br>JULD\_DEEP\_DESCENT\_END\_STATUS:conventions = "Argo reference table 19";<br>JULD\_DEEP\_DESCENT\_END\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>).Example:'2' : Value is transmitted by the float |
| JULD\_DEEP\_PARK\_START | double JULD\_DEEP\_PARK\_START(N\_CYCLE);<br>JULD\_DEEP\_PARK\_START:long\_name = "Deep park start date of the cycle";<br>JULD\_DEEP\_PARK\_START:standard\_name = "time";<br>JULD\_DEEP\_PARK\_START:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_DEEP\_PARK\_START:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_DEEP\_PARK\_START:resolution = X;<br>JULD\_DEEP\_PARK\_START:\_FillValue = 999999.;<br> | Julian day (UTC) when the float transitions to its Deep Park or Deep Drift mission.  This variable is based on float logic based on a descent timer (i.e. SOLO), or be based on measurements of pressure (i.e. Provor).Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_DEEP\_PARK\_START \_STATUS | char JULD\_DEEP\_PARK\_START \_STATUS(N\_CYCLE);<br>JULD\_DEEP\_PARK\_START\_STATUS:long\_name = "Status of deep park start date of the cycle ";<br>JULD\_DEEP\_PARK\_START \_STATUS:conventions = "Argo reference table 19";<br>JULD\_DEEP\_PARK\_START \_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>).Example:'2' : Value is transmitted by the float |
| JULD\_ASCENT\_START | double JULD\_ASCENT\_START(N\_CYCLE);<br>JULD\_ASCENT\_START:long\_name = "Start date of the ascent to the surface";<br>JULD\_ASCENT\_START:standard\_name = "time";<br>JULD\_ASCENT\_START:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_ASCENT\_START:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_ASCENT\_START:resolution = X;<br>JULD\_ASCENT\_START:\_FillValue = 999999.;<br> | Julian day (UTC) of the beginning of the float's ascent to the surfaceExample :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_ASCENT\_START\_STATUS | char JULD\_ASCENT\_START\_STATUS(N\_CYCLE);<br>JULD\_ASCENT\_START\_STATUS:long\_name = "Status of start date of the ascent to the surface";<br>JULD\_ASCENT\_START\_STATUS:conventions = "Argo reference table 19";<br>JULD\_ASCENT\_START\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (.<https://vocab.nerc.ac.uk/collection/R19/>)Example:'2' : Value is transmitted by the float |
| JULD\_DEEP\_ASCENT\_START | double JULD\_DEEP\_ASCENT\_START(N\_CYCLE);<br>JULD\_DEEP\_ASCENT\_START:long\_name = "Deep ascent start date of the cycle";<br>JULD\_DEEP\_ASCENT\_START:standard\_name = "time";<br>JULD\_DEEP\_ASCENT\_START:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_DEEP\_ASCENT\_START:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_DEEP\_ASCENT\_START:resolution = X;<br>JULD\_DEEP\_ASCENT\_START:\_FillValue = 999999.;<br> | Julian day (UTC) when the float begins its rise to drift pressure. Typical for profile-on-descent floats..Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_DEEP\_ASCENT\_START\_STATUS | char JULD\_DEEP\_ASCENT\_START\_STATUS(N\_CYCLE);<br>JULD\_DEEP\_ASCENT\_START\_STATUS:long\_name = "Status of deep ascent start date of the cycle";<br>JULD\_DEEP\_ASCENT\_START\_STATUS:conventions = "Argo reference table 19";<br>JULD\_DEEP\_ASCENT\_START\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>).Example:'2' : Value is transmitted by the float |
| JULD\_ASCENT\_END | double JULD\_ASCENT\_END(N\_CYCLE);<br>JULD\_ASCENT\_END:long\_name = "End date of ascent to the surface";<br>JULD\_ASCENT\_END:standard\_name = "time";<br>JULD\_ASCENT\_END:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_ASCENT\_END:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_ASCENT\_END:resolution = X;<br>JULD\_ASCENT\_END:\_FillValue = 999999.;<br> | Julian day (UTC) of the end of the ascent to the surface .Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_ASCENT\_END\_STATUS | char JULD\_ASCENT\_END\_STATUS(N\_CYCLE);<br>JULD\_ASCENT\_END\_STATUS:long\_name = "Status of end date of ascent to the surface";<br>JULD\_ASCENT\_END\_STATUS:conventions = "Argo reference table 19";<br>JULD\_ASCENT\_END\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>)Example:'2' : Value is transmitted by the float |
| JULD\_TRANSMISSION\_START | double JULD\_TRANSMISSION\_START(N\_CYCLE);<br>JULD\_TRANSMISSION\_START:long\_name = "Start date of transmission";<br>JULD\_TRANSMISSION\_START:standard\_name = "time";<br>JULD\_TRANSMISSION\_START:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_TRANSMISSION\_START:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_TRANSMISSION\_START:resolution = X;<br>JULD\_TRANSMISSION\_START:\_FillValue = 999999.;<br> | Julian day (UTC) of the beginning of data transmission.Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_TRANSMISSION\_START\_STATUS | char JULD\_TRANSMISSION\_START\_STATUS(N\_CYCLE);<br>JULD\_TRANSMISSION\_START\_STATUS:long\_name = "Status of start date of transmission";<br>JULD\_TRANSMISSION\_START\_STATUS:conventions = "Argo reference table 19";<br>JULD\_TRANSMISSION\_START\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>)Example:'2' : Value is transmitted by the float |
| JULD\_FIRST\_MESSAGE | double JULD\_FIRST\_MESSAGE(N\_CYCLE);<br>JULD\_FIRST\_MESSAGE:long\_name = "Date of earliest float message received";<br>JULD\_FIRST\_MESSAGE:standard\_name = "time";<br>JULD\_FIRST\_MESSAGE:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_FIRST\_MESSAGE:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_FIRST\_MESSAGE:resolution = X;<br>JULD\_FIRST\_MESSAGE:\_FillValue = 999999.;<br> | Julian day (UTC) of the earliest float message received.  May or may not have a position associated with it.Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_FIRST\_MESSAGE\_STATUS | char JULD\_FIRST\_MESSAGE\_STATUS(N\_CYCLE);<br>JULD\_FIRST\_MESSAGE\_STATUS:long\_name = "Status of date of earliest float message received";<br>JULD\_FIRST)MESSAGE\_STATUS:conventions = "Argo reference table 19";<br>JULD\_FIRST\_MESSAGE\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>)Example:'2' : Value is transmitted by the float |
| JULD\_FIRST\_LOCATION | double JULD\_FIRST\_LOCATION(N\_CYCLE);<br>JULD\_FIRST\_LOCATION:long\_name = "Date of earliest location";<br>JULD\_FIRST\_LOCATION:standard\_name = "time";<br>JULD\_FIRST\_LOCATION:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_FIRST\_LOCATION:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_FIRST\_LOCATION:resolution = X;<br>JULD\_FIRST\_LOCATION:\_FillValue = 999999.;<br> | Julian day (UTC) of the earliest positionExample :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_FIRST\_LOCATION\_STATUS | char JULD\_FIRST\_LOCATION\_STATUS(N\_CYCLE);<br>JULD\_FIRST\_LOCATION\_STATUS:long\_name = "Status of date of earliest location";<br>JULD\_FIRST\_LOCATION\_STATUS:conventions = "Argo reference table 19";<br>JULD\_FIRST\_LOCATION\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>)Example:'2' : Value is transmitted by the float |
| JULD\_LAST\_LOCATION | double JULD\_LAST\_LOCATION(N\_CYCLE);<br>JULD\_LAST\_LOCATION:long\_name = "Date of latest location";<br>JULD\_LAST\_LOCATION:standard\_name = "time";<br>JULD\_LAST\_LOCATION:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_LAST\_LOCATION:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_LAST\_LOCATION:resolution = X;<br>JULD\_LAST\_LOCATION:\_FillValue = 999999.;<br> | Julian day (UTC) of the latest positionExample :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_LAST\_LOCATION\_STATUS | char JULD\_LAST\_LOCATION\_STATUS(N\_CYCLE);<br>JULD\_LAST\_LOCATION\_STATUS:long\_name = "Status of date of latest location";<br>JULD\_LAST\_LOCATION\_STATUS:conventions = "Argo reference table 19";<br>JULD\_LAST\_LOCATION\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>)Example:'2' : Value is transmitted by the float |
| JULD\_LAST\_MESSAGE | double JULD\_LAST\_MESSAGE(N\_CYCLE);<br>JULD\_LAST\_MESSAGE:long\_name = "Date of latest float message received";<br>JULD\_LAST\_MESSAGE:standard\_name = "time";<br>JULD\_LAST\_MESSAGE:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_LAST\_MESSAGE:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_LAST\_MESSAGE:resolution = X;<br>JULD\_LAST\_MESSAGE:\_FillValue = 999999.;<br> | Julian day (UTC) of the latest float message received.  May or may not have a position associated with it.Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_LAST\_MESSAGE\_STATUS | char JULD\_LAST\_MESSAGE\_STATUS(N\_CYCLE);<br>JULD\_LAST\_MESSAGE\_STATUS:long\_name = "Status of date of latest float message received";<br>JULD\_LAST\_MESSAGE\_STATUS:conventions = "Argo reference table 19";<br>JULD\_LAST\_MESSAGE\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>)Example:'2' : Value is transmitted by the float |
| JULD\_TRANSMISSION\_END | double JULD\_TRANSMISSION\_END(N\_CYCLE);<br>JULD\_TRANSMISSION\_END:long\_name = "Transmission end date";<br>JULD\_TRANSMISSION\_END:standard\_name = "time";<br>JULD\_TRANSMISSION\_END:units = "days since 1950-01-01 00:00:00 UTC";<br>JULD\_TRANSMISSION\_END:conventions = "Relative julian days with decimal part (as parts of day)";<br>JULD\_TRANSMISSION\_END:resolution = X;<br>JULD\_TRANSMISSION\_END:\_FillValue = 999999.;<br> | Julian day (UTC) of the end of transmission.Example :18833.8013889885 : July 25 2001 19:14:00 |
| JULD\_TRANSMISSION\_END\_STATUS | char JULD\_TRANSMISSION\_END\_STATUS(N\_CYCLE);<br>JULD\_TRANSMISSION\_END\_STATUS:long\_name = "Status of transmission end date";<br>JULD\_TRANSMISSION\_END\_STATUS:conventions = "Argo reference table 19";<br>JULD\_TRANSMISSION\_END\_STATUS:\_FillValue = " ";<br> | Status flag on JULD date and time.  The flag scale is described in reference table 19 (<https://vocab.nerc.ac.uk/collection/R19/>)Example:'2' : Value is transmitted by the float |
| CLOCK\_OFFSET | double CLOCK\_OFFSET(N\_CYCLE);<br>CLOCK\_OFFSET:long\_name = "Time of float clock drift";<br>CLOCK\_OFFSET:units = "days";<br>CLOCK\_OFFSET:conventions = "Days with decimal part (as parts of day)";<br>CLOCK\_OFFSET:\_FillValue = 999999.;<br> | Decimal part of day that float clock has drifted. Float clock drift is defined as Float time (provided by the inboard Real Time Clock (RTC) of the float) – UT time.  This makes the clock drift less than 0 if float RTC is before UT time.Float clock drift can be corrected in real time or in delayed mode.  Real time corrections correspond to a data mode of "A".  For "A" mode files, JULD\_ADJUSTED = JULD - CLOCK\_OFFSET"D" mode files may have corrections for clock drift only or additional time corrections based on expert review.  Example :-1.08546: the clock drift is estimated to be equal to  – 1 day 2 hours 3 minutes and 4 seconds at the time of the corresponding cycle surfacing |
| GROUNDED | char GROUNDED(N\_CYCLE);<br>GROUNDED:long\_name = "Did the profiler touch the ground for that cycle?”;<br>GROUNDED:conventions = "Argo reference table 20";<br>GROUNDED:\_FillValue = " ";<br> | GROUNDED indicates the best estimate of whether the float touched the ground for that cycle.The conventions are described in Argo reference table 20 (<https://vocab.nerc.ac.uk/collection/R20/>Example: Y : yes, the float touched the ground  |
| REPRESENTATIVE\_PARK\_PRESSURE | float REPRESENTATIVE\_PARK\_PRESSURE (N\_CYCLE);<br>REPRESENTATIVE\_PARK\_PRESSURE:long\_name = "Best pressure value during park phase";<br>REPRESENTATIVE\_PARK\_PRESSURE:units = "\<X>";<br>REPRESENTATIVE\_PARK\_PRESSURE:\_FillValue = \<X>;<br> | The Representative Park Pressure (RPP) is the best pressure value assigned to the drift phase.  See reference table 21 to understand how this pressure was evaluated.  It should match the PRES(N\_MEASUREMENT) values with MC = 301. \<X> : these fields are specified in the columns of the reference table 3  (<https://vocab.nerc.ac.uk/collection/R03/>).Example:1025 |
| REPRESENTATIVE\_PARK\_PRESSURE\_STATUS | char REPRESENTATIVE\_PARK\_PRESSURE\_STATUS (N\_CYCLE);<br>REPRESENTATIVE\_PARK\_PRESSURE\_STATUS:long\_name = "Status of best pressure value during park phase";<br>REPRESENTATIVE\_PARK\_PRESSURE\_STATUS:conventions = "Argo reference table 21";<br>REPRESENTATIVE\_PARK\_PRESSURE\_STATUS:\_FillValue = " ";<br> | Status flag on the Representative Park Pressure (RPP). The flag scale is described in reference table 21 (<https://vocab.nerc.ac.uk/collection/R21/>).Example:'2' : mean value, directly provided by the float, of pressure measurements regularly sampled during the drift phase |
| CONFIG\_MISSION\_NUMBER | int CONFIG\_MISSION\_NUMBER (N\_CYCLE);<br>CONFIG\_MISSION\_NUMBER:long\_name = "Unique number denoting the missions performed by the float”;<br>CONFIG\_MISSION\_NUMBER:conventions = "1...N, 1 : first complete mission";<br>CONFIG\_MISSION\_NUMBER:\_FillValue = 99999;<br> | Unique number of the mission to which this profile belongs.See note on floats with multiple configurations §2.4.6.1.The number 0 (zero) can be used to denote the float’s mission prelude, if it exists. |
| CYCLE\_NUMBER\_INDEX | int CYCLE\_NUMBER\_INDEX(N\_CYCLE);<br>CYCLE\_NUMBER\_INDEX:long\_name = "Cycle number that corresponds to the current index";<br>CYCLE\_NUMBER\_INDEX:conventions = "0...N, 0 : launch cycle, 1 : first complete cycle";<br>CYCLE\_NUMBER\_INDEX:FillValue = 99999;<br> | Cycle number of the float that corresponds to the information contained in the current index.  This cycle number must match the profile cycle number, ensuring that the trajectory and profile with the same cycle number contain data from the same cycle.Example: 17 means information for the 17<sup>th</sup> cycle of the float is contained in this index. |
| CYCLE\_NUMBER\_INDEX\_ADJUSTED | int CYCLE\_NUMBER\_INDEX\_ADJUSTED (N\_CYCLE);<br>CYCLE\_NUMBER\_INDEX\_ADJUSTED:long\_name = "Adjusted cycle number that corresponds to the current index";<br>CYCLE\_NUMBER\_INDEX\_ADJUSTED:conventions = "0...N, 0 : launch cycle, 1 : first complete cycle";<br>CYCLE\_NUMBER\_INDEX\_ADJUSTED:FillValue = 99999;<br> | Corrected cycle number of the float that corresponds to the information contained in the current index.  Errors may be found in CYCLE\_NUMBER\_INDEX variable which are corrected and contained in this variable. Example: 17 means information for the 17<sup>th</sup> cycle of the float is contained in this index. |
| DATA\_MODE | char DATA\_MODE(N\_ CYCLE);<br>DATA\_MODE:long\_name = "Delayed mode or real time data";<br>DATA\_MODE:conventions = "R : real time;<br> D : delayed mode;<br> A : real time with adjustment";<br>DATA\_MODE:\_FillValue = " ";<br> | Indicates if the trajectory cycle contains real time, adjusted or delayed mode data.  A delayed mode cycle means the positions, times, cycle number, pressure, temperature, and salinity (if measured) have been quality controlled.  Additional parameters like oxygen may not be quality controlled.  Floats often have delayed mode data only after they die, but can have both delayed mode and real time data  for different parameters while alive. When this occurs, two trajectory files exist - a real time file ("R") with only real time data for all the cycles in the float record and a delayed mode file ("D") with both real time and delayed mode data for all the cycles that have been delayed mode quality controlled. Floats can be adjusted in real time with adjusted time values only in the JULD\_ADJUSTED variable and its associated \_STATUS and \_QC variables.  This occurs when floats are corrected in real time for clock drift.  Examples :'R' : real time data'D' : delayed mode data'A' : real time data with JULD\_ADJUSTED values |


### Scientific calibration section

The SCIENTIFIC CALIBRATION section in the V3.2 traj files stores information of parameter calibration during park drift, descend to profile, or surface drift.

| **Name** | **Definition** | **Comment** |
|----------|----------------|-------------|
| SCIENTIFIC\_CALIB\_PARAMETER   | char SCIENTIFIC\_CALIB\_PARAMETER(N\_CALIB\_PARAM, N\_PARAM, STRING64);<br>SCIENTIFIC\_CALIB\_PARAMETER:long\_name = "List of parameters with calibration information";<br>SCIENTIFIC\_CALIB\_PARAMETER:conventions = "Argo reference table 3";<br>SCIENTIFIC\_CALIB\_PARAMETER:\_FillValue = " ";<br> | Name of the calibrated parameter. The list of parameters is in reference table 3 (<https://vocab.nerc.ac.uk/collection/R03/>). Example: DOXY |
| SCIENTIFIC\_CALIB\_EQUATION    | char SCIENTIFIC\_CALIB\_EQUATION(N\_CALIB\_PARAM, N\_PARAM, STRING256);<br>SCIENTIFIC\_CALIB\_EQUATION:long\_name = "Calibration equation for this parameter";<br>SCIENTIFIC\_CALIB\_EQUATION:\_FillValue = " ";<br> | Calibration equation applied to the parameter. Example: Tc = a1\*T + a0 |
| SCIENTIFIC\_CALIB\_COEFFICIENT | char SCIENTIFIC\_CALIB\_COEFFICIENT(N\_CALIB\_PARAM, N\_PARAM, STRING256);<br>SCIENTIFIC\_CALIB\_COEFFICIENT:long\_name = "Calibration coefficients for this equation";<br>SCIENTIFIC\_CALIB\_COEFFICIENT:\_FillValue = " ";<br> | Calibration coefficients for this equation. Example: a1=0.99997, a0=0.0021 |
| SCIENTIFIC\_CALIB\_COMMENT | char SCIENTIFIC\_CALIB\_COMMENT(N\_CALIB\_PARAM, N\_PARAM, STRING256);<br>SCIENTIFIC\_CALIB\_COMMENT:long\_name = "Comment applying to this parameter calibration";<br>SCIENTIFIC\_CALIB\_COMMENT:\_FillValue = " ";<br> | Comment about this calibration. Example: "MC<500 and MC>600: DOXY adjustment based on comparison of surface in-air data with NCEP atmospheric reanalysis following Bittig et al. (2018).” |
| SCIENTIFIC\_CALIB\_DATE | char SCIENTIFIC\_CALIB\_DATE(N\_CALIB\_PARAM, N\_PARAM, DATE\_TIME);<br>SCIENTIFIC\_CALIB\_DATE:long\_name = "Date of calibration";<br>SCIENTIFIC\_CALIB\_DATE:conventions = "YYYYMMDDHHMISS";<br>SCIENTIFIC\_CALIB\_DATE:\_FillValue = " ";<br> | Date of the calibration. Example: 20011217161700 |


### JULD calibration section

The JULD CALIBRATION section in the V3.2 traj files stores information of JULD calibration.


| **Name** | **Definition** | **Comment** |
| -------- | -------------  | ----------- |
| JULD\_CALIB\_EQUATION | char JULD\_CALIB\_EQUATION(N\_CALIB\_JULD, STRING256);<br>JULD\_CALIB\_EQUATION:long\_name = "Calibration equation for JULD";<br>JULD\_CALIB\_EQUATION:\_FillValue = " ";<br> | Calibration equation applied to JULD. Example: JULD\_ADJUSTED = a1\*JULD + a0 |
| JULD\_CALIB\_COEFFICIENT | char JULD\_CALIB\_COEFFICIENT(N\_CALIB\_JULD, STRING256);<br>JULD\_CALIB\_COEFFICIENT:long\_name = "Calibration coefficients for JULD equation";<br>JULD\_CALIB\_COEFFICIENT:\_FillValue = " ";<br>| Calibration coefficients for this equation. Example: a1=0.99997, a0=0.0021 |
| JULD\_CALIB\_COMMENT | char JULD\_CALIB\_COMMENT(N\_CALIB\_JULD, STRING256);<br>JULD\_CALIB\_COMMENT:long\_name = "Comment applying to JULD calibration";<br>JULD\_CALIB\_COMMENT:\_FillValue = " ";<br> | Comment about this calibration. Example: "Float times have been linearly corrected from float clock offset (reported in CLOCK\_OFFSET(N\_CYCLE)).” |
| JULD\_CALIB\_DATE | char JULD\_CALIB\_DATE(N\_CALIB\_JULD, DATE\_TIME);<br>JULD\_CALIB\_DATE:long\_name = "Date of JULD calibration";<br>JULD\_CALIB\_DATE:conventions = "YYYYMMDDHHMISS";<br>JULD\_CALIB\_DATE:\_FillValue = " ";<br>| Date of the calibration. Example: 20011217161700 |


### History information

This section contains history information for each action performed on each measurement. 

Each item of this section has a N\_HISTORY (number of history records) dimension.

| **Name** | **Definition** | **Comment** |
|----------|----------------|-------------|
| HISTORY\_INSTITUTION | char HISTORY\_INSTITUTION (N\_HISTORY, STRING4);<br>HISTORY\_INSTITUTION:long\_name = "Institution which performed action”;<br>HISTORY\_INSTITUTION:conventions = "Argo reference table 4";<br>HISTORY\_INSTITUTION:\_FillValue = " ";<br> | Institution that performed the action.Institution codes are described in reference table 4 (<https://vocab.nerc.ac.uk/collection/R04/>).Example : "ME" for MEDS |
| HISTORY\_STEP | char HISTORY\_STEP (N\_HISTORY, STRING4);<br>HISTORY\_STEP:long\_name = "Step in data processing";<br>HISTORY\_STEP:conventions = "Argo reference table 12";<br>HISTORY\_STEP:\_FillValue = " ";<br> | Code of the step in data processing for this history record. The step codes are described in reference table 12 (<https://vocab.nerc.ac.uk/collection/R12/>).Example : "ARGQ" : Automatic QC of data reported in real-time has been performed |
| HISTORY\_SOFTWARE | char HISTORY\_SOFTWARE (N\_HISTORY, STRING4);<br>HISTORY\_SOFTWARE:long\_name = "Name of software which performed action";<br>HISTORY\_SOFTWARE:conventions = "Institution dependent";<br>HISTORY\_SOFTWARE:\_FillValue = " ";<br> | Name of the software that performed the action.This code is institution dependent.Example : "OW" |
| HISTORY\_SOFTWARE\_RELEASE | char HISTORY\_SOFTWARE\_RELEASE (N\_HISTORY, STRING4);<br>HISTORY\_SOFTWARE\_RELEASE:long\_name = "Version/release of software which performed action";<br>HISTORY\_SOFTWARE\_RELEASE:conventions = "Institution dependent";<br>HISTORY\_SOFTWARE\_RELEASE:\_FillValue = " ";<br> | Version of the software.This name is institution dependent.Example : "1.0" |
| HISTORY\_REFERENCE | char HISTORY\_REFERENCE (N\_HISTORY, STRING64);<br>HISTORY\_REFERENCE:long\_name = "Reference of database";<br>HISTORY\_REFERENCE:conventions = "Institution dependent";<br>HISTORY\_REFERENCE:\_FillValue = " ";<br> | Code of the reference database used for quality control in conjunction with the software.This code is institution dependent.Example : "WOD2001" |
| HISTORY\_DATE | char HISTORY\_DATE(N\_HISTORY, DATE\_TIME);<br>HISTORY\_DATE:long\_name = "Date the history record was created";<br>HISTORY\_DATE:conventions = "YYYYMMDDHHMISS";<br>HISTORY\_DATE:\_FillValue = " ";<br> | Date of the action.Example : "20011217160057" |
| HISTORY\_ACTION | char HISTORY\_ACTION (N\_HISTORY, STRING4);<br>HISTORY\_ACTION:long\_name = "Action performed on data";<br>HISTORY\_ACTION:conventions = "Argo reference table 7";<br>HISTORY\_ACTION:\_FillValue = " ";<br> | Name of the action.The action codes are described in reference table 7 (<https://vocab.nerc.ac.uk/collection/R07/>).Example : "QCF$" for QC failed |
| HISTORY\_PARAMETER | char HISTORY\_PARAMETER(N\_HISTORY, STRING64);<br>HISTORY\_PARAMETER:long\_name = "Parameter action is performed on";<br>HISTORY\_PARAMETER:conventions = "Argo reference table 3";<br>HISTORY\_PARAMETER:\_FillValue = " ";<br> | Name of the parameter on which the action is performed.Example : "PSAL" |
| HISTORY\_PREVIOUS\_VALUE   | float HISTORY\_PREVIOUS\_VALUE(N\_HISTORY);<br>HISTORY\_PREVIOUS\_VALUE:long\_name = "Parameter/Flag previous value before action";<br>HISTORY\_PREVIOUS\_VALUE:\_FillValue = 99999.;<br> | Parameter or flag of the previous value before action.Example :' 2' (probably good) for a flag that was changed to '1' (good) |
| HISTORY\_INDEX\_DIMENSION  | char HISTORY\_INDEX\_DIMENSION(N\_HISTORY);<br>HISTORY\_INDEX\_DIMENSION:long\_name = "Name of dimension to which HISTORY\_START\_INDEX and HISTORY\_STOP\_INDEX correspond";<br>HISTORY\_INDEX\_DIMENSION:conventions = "C: N\_CYCLE, M: N\_MEASUREMENT";<br>HISTORY\_INDEX\_DIMENSION:\_FillValue = " ";<br> | Name of dimension to which HISTORY\_START\_INDEX and HISORY\_STOP\_INDEX correspond. 'C': N\_CYCLE'M': N\_MEASUREMENT |
| HISTORY\_START\_INDEX | int HISTORY\_ START\_INDEX (N\_HISTORY);<br>HISTORY\_START\_INDEX:long\_name = "Start index action applied on";<br>HISTORY\_START\_INDEX:\_FillValue = 99999;<br> | Start index the action is applied to. This index corresponds to N\_MEASUREMENT or N\_CYCLE, depending on the corrected parameterExample : 100 |
| HISTORY\_STOP\_INDEX | int HISTORY\_ STOP\_INDEX (N\_HISTORY);<br>HISTORY\_STOP\_INDEX:long\_name = "Stop index action applied on";<br>HISTORY\_STOP\_INDEX:\_FillValue = 99999;<br> | Stop index the action is applied to. This index corresponds to N\_MEASUREMENT or N\_CYCLE, depending on the corrected parameterExample : 150 |
| HISTORY\_QCTEST | char HISTORY\_QCTEST(N\_HISTORY,  STRING16);<br>HISTORY\_QCTEST:long\_name = "Documentation of tests performed, tests failed (in hex form)";<br>HISTORY\_QCTEST:conventions = "Write tests performed when ACTION=QCP$;<br> tests failed when ACTION=QCF$";<br>HISTORY\_QCTEST:\_FillValue = " ";<br> | This field records the tests performed when ACTION is set to QCP$ (QC performed), the test failed when ACTION is set to QCF$ (QC failed).The QCTEST codes are described in reference table 11 (<https://vocab.nerc.ac.uk/collection/R11/>).Example : "0A" (in hexadecimal form) |

The usage of history section is described in §5 "Using the History section of the Argo netCDF Structure".

